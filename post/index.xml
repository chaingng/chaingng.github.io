<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on takatomo&#39;s blog</title>
    <link>https://chaingng.github.io/post/</link>
    <description>Recent content in Posts on takatomo&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 01 Feb 2018 10:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://chaingng.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>文字コードとは</title>
      <link>https://chaingng.github.io/post/charset/</link>
      <pubDate>Thu, 01 Feb 2018 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/charset/</guid>
      <description>文字コード 広義では、文字にバイト表現を割り当て、その対応表を文字コードと呼ぶ 文字集合と符号化方式 文字コードは文字集合(ccs)と符号化方式(</description>
    </item>
    
    <item>
      <title>pythonの比較におけるisと==の違い</title>
      <link>https://chaingng.github.io/post/python_is/</link>
      <pubDate>Tue, 30 Jan 2018 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/python_is/</guid>
      <description>referenceによると、以下の通り。 ==とis ==はオブジェクトの値が同一か比較する。基本はこちらを使う。 isは同じオブジェクトがどうか</description>
    </item>
    
    <item>
      <title>5Lと3Lのボトルで4Lの水を計る</title>
      <link>https://chaingng.github.io/post/prime_water/</link>
      <pubDate>Mon, 29 Jan 2018 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/prime_water/</guid>
      <description>水の移し方 ３Lの水をくんで、５Lのボトルに移す。 その後５Lのボトルをいっぱいにしても捨てなければいけないので、 常に３Lの水をくんで５Lの水に</description>
    </item>
    
    <item>
      <title>assetsの読み込み前にDOMの制御をしたい場合はDOMContentLoadedを使う</title>
      <link>https://chaingng.github.io/post/wait_dom_load/</link>
      <pubDate>Mon, 29 Jan 2018 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/wait_dom_load/</guid>
      <description>すべてのCSSや画像などのassetsの読み込みまで待つのは時間がかかってしまうので避けたい。 しかしDOMの制御をするためにDOMの読み込み</description>
    </item>
    
    <item>
      <title>android/iphoneでローカルサーバに接続する</title>
      <link>https://chaingng.github.io/post/local_smartphone/</link>
      <pubDate>Fri, 26 Jan 2018 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/local_smartphone/</guid>
      <description>1.ローカルサーバを立ち上げているPCとスマートフォンを同じwifiに接続 2. Internet共有を有効にする macであればシステム環境設定＞</description>
    </item>
    
    <item>
      <title>djangoでのloggerの使い方</title>
      <link>https://chaingng.github.io/post/django_logger/</link>
      <pubDate>Thu, 25 Jan 2018 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/django_logger/</guid>
      <description>djangoでloggerを使うには、loggerの要素（formatters、loggers、filters、handlers）とログレベ</description>
    </item>
    
    <item>
      <title>csrf対策</title>
      <link>https://chaingng.github.io/post/csrf/</link>
      <pubDate>Wed, 24 Jan 2018 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/csrf/</guid>
      <description>CSRFとは Cross Site Request Forgeryの略。 ユーザーがWebアプリケーションにログインすると、CookieにSessionIDがセットされる。 その</description>
    </item>
    
    <item>
      <title>I want to keep creating valuable things with my own hands - a turning point that I grasped with dev-sumi and a resolve as an engineer</title>
      <link>https://chaingng.github.io/post/career_interview/</link>
      <pubDate>Tue, 23 Jan 2018 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/career_interview/</guid>
      <description>This is an English version of my career interview
Developers&amp;rsquo; event &amp;ldquo;Developers Summit&amp;rdquo; to be held in Meguro Gajyo every February, so-called &amp;ldquo;dev-sami&amp;rdquo;. Various sessions will be held, but how can we use what we got there? This time I talked to Mr. Takatomo Honda of freee Co., Ltd., which had a career turning point as a result of participation in Developers Summit 2016.
As an engineer I always wanted to creating things with my own hands - First of all I will ask about my career.</description>
    </item>
    
    <item>
      <title>IP datacast solution</title>
      <link>https://chaingng.github.io/post/ip_datacast/</link>
      <pubDate>Tue, 23 Jan 2018 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/ip_datacast/</guid>
      <description>This is an English version of my written technical article. (Please see original URL for reference figures)
IP datacast (IPDC: IP Data Cast) is a technology for carrying multimedia file data by broadcasting IP packets on broadcasting and communication to various device terminals simultaneously. NTT DATA is working on the development and standardization of IP datacast technology that realizes new services in broadcasting and communications fields. Here we introduce the technical overview and features of IPDC, application examples, latest technologies under development and future prospects.</description>
    </item>
    
    <item>
      <title>Wi-Fi multicast that realizes simultaneous broadcast distribution service to a large number</title>
      <link>https://chaingng.github.io/post/wifi_multicast/</link>
      <pubDate>Tue, 23 Jan 2018 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/wifi_multicast/</guid>
      <description>This is an English version of my written technical article
Wi-Fi multicast By using Wi-Fi multicast technology, multimedia contents such as movies etc. can be delivered simultaneously to all terminals where Wi-Fi can reach.
Two distribution methods As delivery modes of Wi-Fi multicast technology, there are two types of real-time viewing services by live streaming and two patterns of accumulating files on the terminal by file cast delivery. By making good use of these two forms, it is possible to realize a shift time viewing service that can be viewed anytime and anywhere.</description>
    </item>
    
    <item>
      <title>[python]__repr__と__str__の違い</title>
      <link>https://chaingng.github.io/post/python_repr/</link>
      <pubDate>Mon, 22 Jan 2018 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/python_repr/</guid>
      <description>Referenceによると以下の通り。 __str__(self) オブジェクトの「非公式の (informal)」あるいは表示に適した文字列表現を計算するために呼ばれる</description>
    </item>
    
    <item>
      <title>pythonデータ型ごとのメモリサイズ</title>
      <link>https://chaingng.github.io/post/python_type_bits/</link>
      <pubDate>Mon, 15 Jan 2018 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/python_type_bits/</guid>
      <description>int intはデフォルトで28bit &amp;gt;&amp;gt;&amp;gt; import sys &amp;gt;&amp;gt;&amp;gt; sys.getsizeof(1) 28 超えると自動で拡張される &amp;gt;&amp;gt;&amp;gt; sys.getsizeof(1&amp;lt;&amp;lt;32) 32 &amp;gt;&amp;gt;&amp;gt; sys.getsizeof(1&amp;lt;&amp;lt;60) 36 &amp;gt;&amp;gt;&amp;gt; sys.getsizeof(1 &amp;lt;&amp;lt; 10000) 1360 Python3.0をみると、整数型の上限が廃止され</description>
    </item>
    
    <item>
      <title>AWSの認証情報はshared credential fileで管理する</title>
      <link>https://chaingng.github.io/post/aws_credential_file/</link>
      <pubDate>Mon, 08 Jan 2018 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/aws_credential_file/</guid>
      <description>様々なAWSサービスを使っていると複数のcredential情報を使い分けることが多くなる。 プログラムに直接credentialを書きたくな</description>
    </item>
    
    <item>
      <title>gitで特定のコミットの状態に戻す</title>
      <link>https://chaingng.github.io/post/git_reset/</link>
      <pubDate>Mon, 01 Jan 2018 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/git_reset/</guid>
      <description>git resetを使う。 git reset --hard [COMMIT_HASH] で指定したコミットの状態に戻すことができる。 戻したいcommitのhashを確認する $ git log commit 804c6b5c0d5b66caa6e49d788d2e6c4fe2cfa9a0 (HEAD -&amp;gt; master) Author: Takatomo Honda &amp;lt;chngng0103@gmail.com&amp;gt; Date: Sun</description>
    </item>
    
    <item>
      <title>hugo first post</title>
      <link>https://chaingng.github.io/post/hoge/</link>
      <pubDate>Wed, 05 Jul 2017 10:21:23 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/hoge/</guid>
      <description>ようこそ， Hugo の世界へ！！</description>
    </item>
    
    <item>
      <title>python string文字列の使い方</title>
      <link>https://chaingng.github.io/post/python_string/</link>
      <pubDate>Sun, 30 Apr 2017 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/python_string/</guid>
      <description>連続して並んでいる文字を連結する &amp;gt;&amp;gt;&amp;gt; &#39;Py&#39; &#39;thon&#39; &#39;Python&#39; 負のindexを指定 &amp;gt;&amp;gt;&amp;gt; word = &#39;Python&#39; &amp;gt;&amp;gt;&amp;gt; word[-1] # last character &#39;n&#39; &amp;gt;&amp;gt;&amp;gt; word[-2] # second-last character &#39;o&#39; &amp;gt;&amp;gt;&amp;gt; word[-6] &#39;P&#39; スライス &amp;gt;&amp;gt;&amp;gt; word[:2] # character from the beginning to position 2 (excluded) &#39;Py&#39; &amp;gt;&amp;gt;&amp;gt; word[4:] # characters from</description>
    </item>
    
    <item>
      <title>pipenvの使い方</title>
      <link>https://chaingng.github.io/post/pipenv/</link>
      <pubDate>Sun, 23 Apr 2017 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/pipenv/</guid>
      <description>pipenvを使うことにより、rubyにおけるGemfileのようにpythonでpackage管理を行うことができる。 いいところ pip と virtualenv が連</description>
    </item>
    
    <item>
      <title>foreverでnode.jsアプリケーションをデーモン化</title>
      <link>https://chaingng.github.io/post/nodejs_forever/</link>
      <pubDate>Sun, 16 Apr 2017 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/nodejs_forever/</guid>
      <description>foreverを使うことで、nodeまたは任意のスクリプトをデーモン化することができる。 インストール npm install forever -g nodeスクリプトをデーモン起動</description>
    </item>
    
    <item>
      <title>node.jsで環境変数を設定・取得</title>
      <link>https://chaingng.github.io/post/nodejs_env/</link>
      <pubDate>Sun, 09 Apr 2017 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/nodejs_env/</guid>
      <description>node.jsで環境変数を設定・取得するにはprocess.envを使う。 環境変数の一覧を取得 process.envですべての環境変数が取得</description>
    </item>
    
    <item>
      <title>gitでパスワードを保存する</title>
      <link>https://chaingng.github.io/post/git_save_pw/</link>
      <pubDate>Sun, 02 Apr 2017 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/git_save_pw/</guid>
      <description>httpsアクセスの際、githubへのアクセスにはパスワード or personal access token（二段階認証を設定している場合）が必要になる。 デフォルトでは、</description>
    </item>
    
    <item>
      <title>logjam脆弱性と対策</title>
      <link>https://chaingng.github.io/post/logjam/</link>
      <pubDate>Sun, 26 Mar 2017 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/logjam/</guid>
      <description>Weak Diffie-Hellman and the Logjam Attackに詳細が記載されている。 これに従って、詳細を整理しておく。 logjamとは ディフィー・ヘルマン鍵交換における脆弱性を利</description>
    </item>
    
    <item>
      <title>幸せをお金で買う方法(TED) - まとめ</title>
      <link>https://chaingng.github.io/post/how_to_buy_happiness/</link>
      <pubDate>Sun, 19 Mar 2017 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/how_to_buy_happiness/</guid>
      <description>How to buy happiness 幸せをお金で買う方法 多くの人は幸せを買う方法はないと考える。 でも、実は、幸せを買う方法はある。 それは、「他人のためにお金を使うこと」</description>
    </item>
    
    <item>
      <title>[要約]A Better Pip Workflow</title>
      <link>https://chaingng.github.io/post/a_better_pip_workflow/</link>
      <pubDate>Sun, 12 Mar 2017 00:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/a_better_pip_workflow/</guid>
      <description>requirements.txtを使うのには問題があるよ、という話。 典型的なrequirements.txtの使い方 １．A list of top-level dependencies a project has, often without</description>
    </item>
    
    <item>
      <title>ng-includeで読み込んだパーシャルをキャッシュさせない</title>
      <link>https://chaingng.github.io/post/ng_include/</link>
      <pubDate>Sun, 05 Mar 2017 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/ng_include/</guid>
      <description>angularjsにてhtmlをパーシャルしたい場合は、ng-includeを使う。 &amp;lt;div ng-include=&amp;quot;&#39;views/home/sidebar/_issue_list.html&#39;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; パーシャルが常にcacheされてしまう ただしこの場合</description>
    </item>
    
    <item>
      <title>[要約]CodeComplete 15章 条件文の使用</title>
      <link>https://chaingng.github.io/post/code_complete_15/</link>
      <pubDate>Sun, 26 Feb 2017 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/code_complete_15/</guid>
      <description>if文 正常なケースの実行文を先に書いてから、例外的なケースを書く 可読性とパフォーマンスの面で重要 if(){ ##正常ケース } else(){ ##例外ケース } 正常なケ</description>
    </item>
    
    <item>
      <title>ElasticSearchの導入</title>
      <link>https://chaingng.github.io/post/elasticsearch_install/</link>
      <pubDate>Sun, 19 Feb 2017 00:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/elasticsearch_install/</guid>
      <description>動作環境 Ubuntu14.04 インストール Java8が必要 apt-get install -y openjdk-8-jdk その後公式にそってelasticsearchをインストール wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add - sudo apt-get install -y apt-transport-https echo &amp;quot;deb https://artifacts.elastic.co/packages/5.x/apt stable</description>
    </item>
    
    <item>
      <title>crowi用のvagrantを公開しました</title>
      <link>https://chaingng.github.io/post/vagrant_crowi/</link>
      <pubDate>Sun, 12 Feb 2017 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/vagrant_crowi/</guid>
      <description>情報集約用にwikiをいろいろ試していて、crowiを試してみることにした。 いくつかセットアップが必要だったので、vagrantでワンタッチ</description>
    </item>
    
    <item>
      <title>リモート追跡ブランチ／追跡ブランチ／リモートブランチの違い</title>
      <link>https://chaingng.github.io/post/git_branch/</link>
      <pubDate>Sun, 05 Feb 2017 00:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/git_branch/</guid>
      <description>まとめ リモートブランチ リモートレポジトリに存在するブランチ (remote)/(branch)で表される リモート追跡ブランチ ローカルに存在 リモ</description>
    </item>
    
    <item>
      <title>shebangから理解するUNIXの仕組み</title>
      <link>https://chaingng.github.io/post/shebang_init/</link>
      <pubDate>Sun, 29 Jan 2017 09:22:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/shebang_init/</guid>
      <description>unixでシェルスクリプトを書くとき、冒頭に#!/bin/shと書くことは当たり前なのだけど、 時々コマンドなんだっけ、と忘れることがあった。</description>
    </item>
    
    <item>
      <title>防御的プログラミング(CodeCompleteのまとめ)</title>
      <link>https://chaingng.github.io/post/%E9%98%B2%E5%BE%A1%E7%9A%84%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/</link>
      <pubDate>Sun, 22 Jan 2017 12:04:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E9%98%B2%E5%BE%A1%E7%9A%84%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/</guid>
      <description>CodeComplete 第8章防御的プログラミングのまとめ。 防御的プログラミングとは、「そうなるはずだ」と決めつけないこと、 防御運転にヒントを得たものである。 無効</description>
    </item>
    
    <item>
      <title>httpにおける適切なステータスコードの選択</title>
      <link>https://chaingng.github.io/post/http_status_code/</link>
      <pubDate>Sun, 15 Jan 2017 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/http_status_code/</guid>
      <description>このフローチャートをみれば全て解決。 http://racksburg.com/choosing-an-http-status-code/ 日本語版 http://postd.cc/choosing-an-http-status-code/</description>
    </item>
    
    <item>
      <title>vagrantの使い方</title>
      <link>https://chaingng.github.io/post/vagrant/</link>
      <pubDate>Sun, 08 Jan 2017 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/vagrant/</guid>
      <description>インストール 公式のDownloadページから、対応するOSのパッケージをダウンロードしてインストール VagrantFileの作成 vagrant initを</description>
    </item>
    
    <item>
      <title>公開鍵によるsshアクセスの設定</title>
      <link>https://chaingng.github.io/post/linux_ssh_key/</link>
      <pubDate>Sun, 01 Jan 2017 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/linux_ssh_key/</guid>
      <description>ssh-keygenにて公開鍵と秘密鍵を作成 $ ssh-keygen -t rsa -b 2048 Generating public/private rsa key pair. Enter file in which to save the key (/Users/hondatakatomo/.ssh/id_rsa): /Users/hondatakatomo/.ssh/hogefuga Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /Users/hondatakatomo/.ssh/hogefuga. Your public key has been saved in /Users/hondatakatomo/.ssh/hogefuga.pub. The key</description>
    </item>
    
    <item>
      <title>投資信託の見直しまとめ</title>
      <link>https://chaingng.github.io/post/%E6%8A%95%E8%B3%87%E4%BF%A1%E8%A8%97%E3%81%AE%E8%A6%8B%E7%9B%B4%E3%81%97%E3%81%BE%E3%81%A8%E3%82%81/</link>
      <pubDate>Mon, 13 Jun 2016 18:19:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E6%8A%95%E8%B3%87%E4%BF%A1%E8%A8%97%E3%81%AE%E8%A6%8B%E7%9B%B4%E3%81%97%E3%81%BE%E3%81%A8%E3%82%81/</guid>
      <description>目的 いまの投資信託をよりリターン得られるように最適化する。 1.購入時手数料 投資信託の購入時にかかる手数料。 一般に対面である銀行はこれが高い。</description>
    </item>
    
    <item>
      <title>SRM 668 DIV1 Easy - PaintTheRoom ○</title>
      <link>https://chaingng.github.io/post/srm-668-div1-easy---painttheroom-/</link>
      <pubDate>Wed, 06 Jan 2016 20:47:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-668-div1-easy---painttheroom-/</guid>
      <description>問題 https://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13846&amp;amp;rd=16548 解き方 K=1の場合はどのようなR,Cでも達成できる。 その他の場合は、全ての道を通って元のセルに戻ってこれればOKとなる。 Rが偶数の場合</description>
    </item>
    
    <item>
      <title>SRM 670 DIV1 Easy - DoubleOrOneEasy x</title>
      <link>https://chaingng.github.io/post/srm-670-div1-easy---doubleoroneeasy-x/</link>
      <pubDate>Wed, 06 Jan 2016 20:42:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-670-div1-easy---doubleoroneeasy-x/</guid>
      <description>問題 https://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=14059&amp;amp;rd=16550 解き方 文字列長がnのとき、条件を満たすLCSは必ずn-1となる。 そのようなサブ文字列を全て求めて条件を満たすか確かめれば良い。 サブ文字</description>
    </item>
    
    <item>
      <title>SRM 677 DIV1 Easy - DoubleOrOneEasy x</title>
      <link>https://chaingng.github.io/post/srm-677-div1-easy---doubleoroneeasy-x/</link>
      <pubDate>Mon, 04 Jan 2016 21:28:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-677-div1-easy---doubleoroneeasy-x/</guid>
      <description>問題 https://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=14101&amp;amp;rd=16627 解き方 ２倍と１足す動作を単純に全通り試そうとするとオーバーフローしてしまう。 ここでnewA,newBからa,bを作ることを考えてみる。</description>
    </item>
    
    <item>
      <title>SRM 669 DIV1 Easy - SubdividedSlimes x</title>
      <link>https://chaingng.github.io/post/srm-669-div1-easy---subdividedslimes-x/</link>
      <pubDate>Tue, 22 Dec 2015 12:34:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-669-div1-easy---subdividedslimes-x/</guid>
      <description>問題 https://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13946&amp;amp;rd=16549 解き方 すべての場合の数を考えるとはまってしまう。 逆に制約条件を考えると、Sが与えられた時、最大まで分割した時は１がS個並ぶ、 つまり最大</description>
    </item>
    
    <item>
      <title>SRM 671 DIV1 Easy - BearCries x</title>
      <link>https://chaingng.github.io/post/srm-671-div1-easy---bearcries-x/</link>
      <pubDate>Sun, 29 Nov 2015 11:53:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-671-div1-easy---bearcries-x/</guid>
      <description>問題 https://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=14010&amp;amp;rd=16551 解き方 固定できる条件はなさそう。 ある値でソーティングして貪欲にも解けなさそうなのでｄｐを考える。 dp[現在の位置][;があって_がない</description>
    </item>
    
    <item>
      <title>SRM 673 DIV1 Easy - BearCavalry x</title>
      <link>https://chaingng.github.io/post/srm-673-div1-easy---bearcavalry-x/</link>
      <pubDate>Sat, 28 Nov 2015 15:57:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-673-div1-easy---bearcavalry-x/</guid>
      <description>問題 https://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=14081&amp;amp;rd=16616 解き方 w[0]について各組み合わせを決めることで、最大にならければならないスコアが決まる。 あとは残りについて、その数を超えないように全</description>
    </item>
    
    <item>
      <title>SRM 672 DIV1 Easy - Procrastination x</title>
      <link>https://chaingng.github.io/post/srm-672-div1-easy---procrastination-x/</link>
      <pubDate>Fri, 23 Oct 2015 13:33:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-672-div1-easy---procrastination-x/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=14072&amp;amp;rd=16552 解き方 素数を考えると、素数自身は交換対象とならない。 よって、何度交換が発生しても、ｎはｎより小さい素数とｎより大きい素数の 間に収まる。</description>
    </item>
    
    <item>
      <title>SRM 663 DIV1 Easy - ABBADiv1 ○</title>
      <link>https://chaingng.github.io/post/srm-663-div1-easy---abbadiv1-/</link>
      <pubDate>Wed, 05 Aug 2015 09:39:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-663-div1-easy---abbadiv1-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13922&amp;amp;rd=16512 解き方 initialからtargetを生成するよう順に解いていき、部分列が存在しないようなら 打ち切ることで、候補数は限られるので時間内</description>
    </item>
    
    <item>
      <title>SRM 664 DIV1 Easy - BearPlays x</title>
      <link>https://chaingng.github.io/post/srm-664-div1-easy---bearplays-x/</link>
      <pubDate>Wed, 05 Aug 2015 09:25:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-664-div1-easy---bearplays-x/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13916&amp;amp;rd=16513 解き方 数学的に解くことができるのに気がつけるか。 A+B=Sとすると、 A&amp;lt;Bのとき、A=2*A=2A%S A&amp;gt;Bのとき、A=A</description>
    </item>
    
    <item>
      <title>SRM 662 DIV1 Easy - FoxesOfTheRoundTable △</title>
      <link>https://chaingng.github.io/post/srm-662-div1-easy---foxesoftheroundtable-/</link>
      <pubDate>Sun, 12 Jul 2015 15:18:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-662-div1-easy---foxesoftheroundtable-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13858&amp;amp;rd=16511 解き方 Dが1000までなので、Dを固定することで解けそう。 ただ、Dをできるだけ小さくするということは、並べ方は以下の通り 一意に定まる。</description>
    </item>
    
    <item>
      <title>SRM 588 DIV1 Easy - GUMIAndSongsDiv1</title>
      <link>https://chaingng.github.io/post/srm-588-div1-easy---gumiandsongsdiv1/</link>
      <pubDate>Sun, 31 May 2015 13:51:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-588-div1-easy---gumiandsongsdiv1/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12706&amp;amp;rd=15700 解き方 どの範囲のトーンを利用するか、という情報がわかれば あとはその範囲内のトーンについてdurationが小さい順に選んでいけばよい。</description>
    </item>
    
    <item>
      <title>SRM 592 DIV1 Easy - LittleElephantAndBalls</title>
      <link>https://chaingng.github.io/post/srm-592-div1-easy---littleelephantandballs/</link>
      <pubDate>Sun, 31 May 2015 13:49:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-592-div1-easy---littleelephantandballs/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12758&amp;amp;rd=15704 解き方 問題文を、最終的にボールを置いた位置の状態にすると勘違いしてしまった。 ボールが左から順に与えられて、それを任意の位置に配置する、</description>
    </item>
    
    <item>
      <title>SRM 589 DIV1 Easy - GooseTattarrattatDiv1 ○</title>
      <link>https://chaingng.github.io/post/srm-589-div1-easy---goosetattarrattatdiv1-/</link>
      <pubDate>Sun, 31 May 2015 13:39:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-589-div1-easy---goosetattarrattatdiv1-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12730&amp;amp;rd=15701 解き方 回文にするために一致させなければならアルファベットの集合を考えた時、 もっとも出現回数の大きいものだけを残して、他を変換するのが 一</description>
    </item>
    
    <item>
      <title>SRM 587 DIV1 Easy - JumpFurther ○</title>
      <link>https://chaingng.github.io/post/srm-587-div1-easy---jumpfurther-/</link>
      <pubDate>Sun, 31 May 2015 13:36:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-587-div1-easy---jumpfurther-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12300&amp;amp;rd=15699 解き方 最初はすべてのターンでジャンプし、そのときbadStepに当たらなければ それが最大の答えとなる。 badStepにあたった時、最初</description>
    </item>
    
    <item>
      <title>SRM 590 DIV1 Easy - FoxAndChess ○</title>
      <link>https://chaingng.github.io/post/srm-590-div1-easy---foxandchess-/</link>
      <pubDate>Sun, 31 May 2015 13:33:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-590-div1-easy---foxandchess-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12725&amp;amp;rd=15702 解き方 左にある要素から順に、 ①アルファベットが一致するか ②Lならばbeginの方が右側にあるか ③Rならばbeginの方が左側にあるか を</description>
    </item>
    
    <item>
      <title>SRM 552 DIV1 Easy - FoxPaintingBalls</title>
      <link>https://chaingng.github.io/post/srm-552-div1-easy---foxpaintingballs/</link>
      <pubDate>Sat, 30 May 2015 19:45:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-552-div1-easy---foxpaintingballs/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12146&amp;amp;rd=15174 解き方 法則を導き出しても解けるが、少し複雑なことに気づけば 2分探索するのが確実。 N=1のときは必要なボールの数の計算が例外値となるので</description>
    </item>
    
    <item>
      <title>SRM 514 DIV1 Easy - MagicalGirlLevelOneDivOne</title>
      <link>https://chaingng.github.io/post/srm-514-div1-easy---magicalgirllevelonedivone/</link>
      <pubDate>Fri, 29 May 2015 22:28:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-514-div1-easy---magicalgirllevelonedivone/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11476&amp;amp;rd=14539 解き方 (1,n)と(1,-n)の動作により現在のマスから２つ上下に移動したマスには 必ず到達することができる。 ここで、jumpTypes</description>
    </item>
    
    <item>
      <title>SRM 540 DIV1 Easy - ImportantSequence</title>
      <link>https://chaingng.github.io/post/srm-540-div1-easy---importantsequence/</link>
      <pubDate>Wed, 27 May 2015 20:40:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-540-div1-easy---importantsequence/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11842&amp;amp;rd=14732 解き方 上限と下限を決めるのに、最初の数字は増加列になる。 a(i)=s*a0+t、(初項はs=1,t=0)とする。 +が現れた時、そのとき</description>
    </item>
    
    <item>
      <title>SRM 527 DIV1 Easy - P8XGraphBuilder</title>
      <link>https://chaingng.github.io/post/srm-527-div1-easy---p8xgraphbuilder/</link>
      <pubDate>Wed, 27 May 2015 20:01:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-527-div1-easy---p8xgraphbuilder/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11308&amp;amp;rd=14552 解き方 ｄｐで解く。最終的に２＊ｎ−２個のエッジが発生する。 コード class P8XGraphBuilder { public: int solve(vector&amp;lt;int&amp;gt; scores) { int n=scores.size()+1; int dp[n+1][2*n-1]; FORE(i,0,n+1)FORE(j,0,2*n-1)dp[i][j]=-(1e+9); dp[0][0]=0; for(int i=0;i&amp;lt;n;i++)for(int j=i;j&amp;lt;2*n-2;j++){ for(int k=0;k&amp;lt;n-1&amp;amp;&amp;amp;j+k+1&amp;lt;=2*n-2;k++){ dp[i+1][j+k+1]=max(dp[i+1][j+k+1],dp[i][j]+scores[k]); } } return dp[n][2*n-2]; } };</description>
    </item>
    
    <item>
      <title>SRM 539 DIV1 Easy - Over9000Rocks</title>
      <link>https://chaingng.github.io/post/srm-539-div1-easy---over9000rocks/</link>
      <pubDate>Wed, 27 May 2015 16:42:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-539-div1-easy---over9000rocks/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11855&amp;amp;rd=14731 解き方 ９０００以上となる数をすべて保存しては間に合わないので、 その始点と終点のみ保存してあげて、その間の範囲を計算していくことで メモリ</description>
    </item>
    
    <item>
      <title>SRM 576 DIV1 Easy - ArcadeManao</title>
      <link>https://chaingng.github.io/post/srm-576-div1-easy---arcademanao/</link>
      <pubDate>Wed, 27 May 2015 16:38:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-576-div1-easy---arcademanao/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12504&amp;amp;rd=15496 解き方 各はしごの数について昇順で調べることができる。 通常の経路探索に、はしごの長さを考慮すればよい。 コード class ArcadeManao { public: int shortestLadder(vector&amp;lt;string&amp;gt; level, int coinRow, int coinColumn) { int h=level.size(),w=level[0].size();</description>
    </item>
    
    <item>
      <title>SRM 579 DIV1 Easy - UndoHistory ○</title>
      <link>https://chaingng.github.io/post/srm-579-div1-easy---undohistory-/</link>
      <pubDate>Wed, 27 May 2015 16:36:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-579-div1-easy---undohistory-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12523&amp;amp;rd=15499 解き方 前の文字列からそのまま続けられる時はその場合と、 以前の部分文字列を使う場合のうち最小のものを採用していけばよい。 コード class UndoHistory { public: int</description>
    </item>
    
    <item>
      <title>SRM 577 DIV1 Easy - EllysRoomAssignmentsDiv1 x</title>
      <link>https://chaingng.github.io/post/srm-577-div1-easy---ellysroomassignmentsdiv1-x/</link>
      <pubDate>Wed, 27 May 2015 16:30:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-577-div1-easy---ellysroomassignmentsdiv1-x/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12514&amp;amp;rd=15497 解き方 部屋の数Rから、部屋への割り当てが行われる回数Kが決まる。 K回の割り当てのうち、 自分が割り当てられる場合はその他のメンバーは関係</description>
    </item>
    
    <item>
      <title>SRM 581 DIV1 Easy - SurveillanceSystem</title>
      <link>https://chaingng.github.io/post/srm-581-div1-easy---surveillancesystem/</link>
      <pubDate>Wed, 27 May 2015 16:22:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-581-div1-easy---surveillancesystem/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12588&amp;amp;rd=15501 解き方 監視してる数ごとに、どのような場合が成り立つか考える。 その監視している数について、成り立つすべての場合をall、カメラの数をcn</description>
    </item>
    
    <item>
      <title>SRM 568 DIV1 Easy - BallsSeparating</title>
      <link>https://chaingng.github.io/post/srm-568-div1-easy---ballsseparating/</link>
      <pubDate>Mon, 25 May 2015 10:35:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-568-div1-easy---ballsseparating/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12398&amp;amp;rd=15488 解き方 基本的に貪欲法だが、少なくとも各色ごとに１つは箱を用意する必要があるので 各色ひとつずつ箱を決めた場合について、貪欲法で解く。 コー</description>
    </item>
    
    <item>
      <title>SRM 559 DIV1 Easy - HyperKnight</title>
      <link>https://chaingng.github.io/post/srm-559-div1-easy---hyperknight/</link>
      <pubDate>Mon, 25 May 2015 10:32:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-559-div1-easy---hyperknight/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12201&amp;amp;rd=15181 解き方 サンプルを表に書いて見ると、各動ける数ごとにどれだけのマスを占めるか 一意に決めることができる。ただきちんと表に落とすのがちょっと</description>
    </item>
    
    <item>
      <title>SRM 542 DIV1 Easy - PatrolRoute</title>
      <link>https://chaingng.github.io/post/srm-542-div1-easy---patrolroute/</link>
      <pubDate>Wed, 20 May 2015 22:19:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-542-div1-easy---patrolroute/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11934&amp;amp;rd=14734 解き方 ３点を選んだ時、そのｘ座標の最小値と最大値の差、ｙ座標の最小値と最大値の差が それぞれ１辺となる長方形の外周の長さが、たどるルート</description>
    </item>
    
    <item>
      <title>SRM 541 DIV1 Easy - AntsMeet</title>
      <link>https://chaingng.github.io/post/srm-541-div1-easy---antsmeet/</link>
      <pubDate>Wed, 20 May 2015 22:13:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-541-div1-easy---antsmeet/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11887&amp;amp;rd=14733 解き方 0.5単位のターンでぶつからないか試せば良い。 試す数の最大値に注意。 コード class AntsMeet { public: int countAnts(vector&amp;lt;int&amp;gt; x, vector&amp;lt;int&amp;gt; y, string direction) { int n=x.size(); double dx[]={1,0,-1,0},dy[]={0,1,0,-1}; int d[n]; FORE(i,0,n){ if(direction[i]==&#39;E&#39;)d[i]=0; if(direction[i]==&#39;N&#39;)d[i]=1; if(direction[i]==&#39;W&#39;)d[i]=2; if(direction[i]==&#39;S&#39;)d[i]=3; } double px[n],py[n]; FORE(i,0,n){</description>
    </item>
    
    <item>
      <title>SRM 560 DIV1 Easy - TomekPhone</title>
      <link>https://chaingng.github.io/post/srm-560-div1-easy---tomekphone/</link>
      <pubDate>Wed, 20 May 2015 21:58:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-560-div1-easy---tomekphone/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12296&amp;amp;rd=15182 解き方 貪欲法で解けば良い。システムテストで落ちないように間違いの少ないような実装を するよう気をつける。 コード class TomekPhone { public: int minKeystrokes(vector&amp;lt;int&amp;gt; f, vector&amp;lt;int&amp;gt; key) { int n=f.size(); int</description>
    </item>
    
    <item>
      <title>SRM 651 DIV1 Easy - ICPCBalloons ○</title>
      <link>https://chaingng.github.io/post/srm-651-div1-easy---icpcballoons-/</link>
      <pubDate>Wed, 20 May 2015 21:55:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-651-div1-easy---icpcballoons-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12314&amp;amp;rd=15183 解き方 maxAcceptedの数は15個までなので、各問題についてMとLすべての分け方を試すことが できる。 各分け方について、貪欲に風船</description>
    </item>
    
    <item>
      <title>SRM 538 DIV1 Easy - EvenRoute</title>
      <link>https://chaingng.github.io/post/srm-538-div1-easy---evenroute/</link>
      <pubDate>Sun, 17 May 2015 13:38:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-538-div1-easy---evenroute/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11808&amp;amp;rd=14729 解き方 （ｘ，ｙ）の合計が奇数の座標と偶数の座標が存在すれば、どちらにもできるので 答えは必ずYESになる。 そうでない場合はそれぞれ奇数の</description>
    </item>
    
    <item>
      <title>SRM 537 DIV1 Easy - KingXNewCurrency</title>
      <link>https://chaingng.github.io/post/srm-537-div1-easy---kingxnewcurrency/</link>
      <pubDate>Sun, 17 May 2015 13:35:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-537-div1-easy---kingxnewcurrency/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11817&amp;amp;rd=14730 解き方 A，B自身をXとYで表せられるような整数を求めれば良い。 どちらもXで割り切れるならばYが不要になるので−１となる。 コード class KingXNewCurrency { public:</description>
    </item>
    
    <item>
      <title>SRM 545 DIV1 Easy - StrIIRec</title>
      <link>https://chaingng.github.io/post/srm-545-div1-easy---striirec/</link>
      <pubDate>Sun, 17 May 2015 13:26:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-545-div1-easy---striirec/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12025&amp;amp;rd=14737 解き方 貪欲法で、左のアルファベットから決めていけば良い。 決めていく材料として、 あるアルファベットを固定した時に最大のminInvが指定</description>
    </item>
    
    <item>
      <title>SRM 549 DIV1 Easy - PointyWizardHats xx</title>
      <link>https://chaingng.github.io/post/srm-549-div1-easy---pointywizardhats-xx/</link>
      <pubDate>Sun, 17 May 2015 13:23:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-549-div1-easy---pointywizardhats-xx/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11965&amp;amp;rd=15171 解き方 上に載せるハットと下に載せるハットの組み合わせに分かれるので、 二部マッチングの問題に帰着できる。 最大フローアルゴリズムを用いれば</description>
    </item>
    
    <item>
      <title>SRM 548 DIV1 Easy - KingdomAndTrees</title>
      <link>https://chaingng.github.io/post/srm-548-div1-easy---kingdomandtrees/</link>
      <pubDate>Sun, 17 May 2015 13:20:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-548-div1-easy---kingdomandtrees/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11967&amp;amp;rd=15170 解き方 二分探索を用いればよい。 ０が答えのときを含ませるには、lowを-1以下に設定する必要があることに注意。 コード class KingdomAndTrees { public: bool ispossible(vector&amp;lt;int&amp;gt; h,int m){ int n=h.size();</description>
    </item>
    
    <item>
      <title>SRM 551 DIV1 Easy - ColorfulChocolates</title>
      <link>https://chaingng.github.io/post/srm-551-div1-easy---colorfulchocolates/</link>
      <pubDate>Sun, 17 May 2015 13:17:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-551-div1-easy---colorfulchocolates/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12137&amp;amp;rd=15173 解き方 各アルファベットごとに最大の連続数を考え、最大のものを求める。 あるアルファベットについて最大の連続数を考えるとき、 どれか１つのア</description>
    </item>
    
    <item>
      <title>SRM 550 DIV1 Easy - RotatingBot</title>
      <link>https://chaingng.github.io/post/srm-550-div1-easy---rotatingbot/</link>
      <pubDate>Sun, 17 May 2015 13:13:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-550-div1-easy---rotatingbot/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12033&amp;amp;rd=15172 解き方 メモリも計算量も足りるので、正しく間違えないように実装すればよい。 コード int p[1300][1300]; class RotatingBot { public: int minArea(vector&amp;lt;int&amp;gt; moves) { int n=moves.size(); int dx[]={1,0,-1,0},dy[]={0,1,0,-1}; memset(p,0,sizeof(p)); int minx=650,miny=650,maxx=650,maxy=650; int x=650,y=650,d=0; FORE(i,0,n){ FORE(j,0,moves[i]){ int nx=x+dx[d],ny=y+dy[d]; x=nx,y=ny; minx=min(minx,x); maxx=max(maxx,x); miny=min(miny,y); maxy=max(maxy,y);</description>
    </item>
    
    <item>
      <title>SRM 553 DIV1 Easy - Suminator</title>
      <link>https://chaingng.github.io/post/srm-553-div1-easy---suminator/</link>
      <pubDate>Sun, 17 May 2015 13:09:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-553-div1-easy---suminator/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11354&amp;amp;rd=15175 解き方 プログラムをスタックで実行し、０，１，２で出力させ ０で出力した時に求める値と一致すれば０， １，２を出力させた時に出力が同じで、求</description>
    </item>
    
    <item>
      <title>SRM 555 DIV1 Easy - CuttingBitString</title>
      <link>https://chaingng.github.io/post/srm-555-div1-easy---cuttingbitstring/</link>
      <pubDate>Sun, 17 May 2015 13:06:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-555-div1-easy---cuttingbitstring/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12155&amp;amp;rd=15177 解き方 ｄｐで解く。ｎは５０なので整数の最大は2^50=10^15程度なのでlong longで 表すことができる。 コード class CuttingBitString { public: bool ispossible(string s){ if(s[0]==&#39;0&#39;)return false;</description>
    </item>
    
    <item>
      <title>SRM 526.5 DIV1 Easy - MagicCandy x</title>
      <link>https://chaingng.github.io/post/srm-526.5-div1-easy---magiccandy-x/</link>
      <pubDate>Wed, 13 May 2015 09:39:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-526.5-div1-easy---magiccandy-x/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11706&amp;amp;rd=14762 解き方 普通に計算していては間に合わない。 例えば２０個のキャンディーからは 20-4=16→16-4=12→12-3=9→9-3=6→6-</description>
    </item>
    
    <item>
      <title>SRM 516 DIV1 Easy - NetworkXOneTimePad</title>
      <link>https://chaingng.github.io/post/srm-516-div1-easy---networkxonetimepad/</link>
      <pubDate>Mon, 11 May 2015 23:05:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-516-div1-easy---networkxonetimepad/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=10846&amp;amp;rd=14541 解き方 すべての暗号前の文字と暗号後の文字の組み合わせで、候補となる キーがすべて作成できる。 あるキーについて、暗号後の文字を復号した時に</description>
    </item>
    
    <item>
      <title>SRM 509 DIV1 Easy - LuckyRemainder</title>
      <link>https://chaingng.github.io/post/srm-509-div1-easy---luckyremainder/</link>
      <pubDate>Sun, 10 May 2015 20:58:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-509-div1-easy---luckyremainder/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11138&amp;amp;rd=14438 解き方 各桁の数は与えられた整数の桁数をNとすると、それぞれ2^(N-1)回 足されることになる。 この数を９で割った余りが答えになる。 コー</description>
    </item>
    
    <item>
      <title>SRM 512 DIV1 Easy - MysteriousRestaurant</title>
      <link>https://chaingng.github.io/post/srm-512-div1-easy---mysteriousrestaurant/</link>
      <pubDate>Sun, 10 May 2015 13:06:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-512-div1-easy---mysteriousrestaurant/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11295&amp;amp;rd=14537 解き方 何日目まで訪れることができるかを固定することで貪欲法で解くことができる。 N日目まで訪れるとすると、１日目＋７の倍数・・・６日目＋</description>
    </item>
    
    <item>
      <title>SRM 511 DIV1 Easy - Zoo</title>
      <link>https://chaingng.github.io/post/srm-511-div1-easy---zoo/</link>
      <pubDate>Sun, 10 May 2015 13:03:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-511-div1-easy---zoo/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11485&amp;amp;rd=14536 解き方 動物数がN匹であれば、各動物が（０匹，N匹）〜（N匹、０匹）までの すべての場合が考えられる。 各場合について、動物が答えている数が</description>
    </item>
    
    <item>
      <title>SRM 510 DIV1 Easy - TheAlmostLuckyNumbersDivOne</title>
      <link>https://chaingng.github.io/post/srm-510-div1-easy---thealmostluckynumbersdivone/</link>
      <pubDate>Sun, 10 May 2015 13:00:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-510-div1-easy---thealmostluckynumbersdivone/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11461&amp;amp;rd=14439 解き方 ４か７以外の数字は最大ひとつしか含めてはいけないので、 １つ含んでいる場合とひとつも含んでいない場合で場合分けすれば すべての数字を</description>
    </item>
    
    <item>
      <title>SRM 515 DIV1 Easy - RotatedClock</title>
      <link>https://chaingng.github.io/post/srm-515-div1-easy---rotatedclock/</link>
      <pubDate>Sun, 10 May 2015 12:57:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-515-div1-easy---rotatedclock/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11329&amp;amp;rd=14540 解き方 ３０度ずつ回転させることが可能なので、全探索して 有効な数字の時の値を更新すればよい。 コード class RotatedClock { public: string getEarliest(int hourHand, int minuteHand) { string ret=&#34;&#34;; for(int i=0;i&amp;lt;=360;i+=30){ int h=(hourHand+i)%360; int m=(minuteHand+i)%360; if((h%30)*12==m){</description>
    </item>
    
    <item>
      <title>SRM 513 DIV1 Easy - YetAnotherIncredibleMachine</title>
      <link>https://chaingng.github.io/post/srm-513-div1-easy---yetanotherincrediblemachine/</link>
      <pubDate>Sun, 10 May 2015 12:55:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-513-div1-easy---yetanotherincrediblemachine/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11502&amp;amp;rd=14538 解き方 各プラットフォームについて有効な場所の総数を、それぞれかけていけばよい。 あるプラットフォームについて有効な場所かどうかの判定は、</description>
    </item>
    
    <item>
      <title>TCO 2015 1C Middle - UnrelatedPaths</title>
      <link>https://chaingng.github.io/post/tco-2015-1c-middle---unrelatedpaths/</link>
      <pubDate>Sun, 10 May 2015 10:37:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/tco-2015-1c-middle---unrelatedpaths/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13746&amp;amp;rd=16434 解き方 木のルートからDFSでたどっていってパスの数を足していけば良い。 ルート０に直接つながっているノードについて、 さらにその下にノード</description>
    </item>
    
    <item>
      <title>TCO 2015 1C Hard  - MagicWords</title>
      <link>https://chaingng.github.io/post/tco-2015-1c-hard----magicwords/</link>
      <pubDate>Sun, 10 May 2015 10:28:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/tco-2015-1c-hard----magicwords/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13731&amp;amp;rd=16434 解き方 dpの問題。 dp[現在調べている桁数][beautifulcountの数][10の連続数]＝そのbeautifulcountの総</description>
    </item>
    
    <item>
      <title>SRM 508 DIV1 Easy - DivideAndShift</title>
      <link>https://chaingng.github.io/post/srm-508-div1-easy---divideandshift/</link>
      <pubDate>Sat, 09 May 2015 15:47:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-508-div1-easy---divideandshift/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11434&amp;amp;rd=14437 数字の列と、現在の位置が与えられる。 ２つの操作のいずれかによって、位置を１番目に移動させたい。 ・位置を右か左に移動 ・現在の列数の素数で</description>
    </item>
    
    <item>
      <title>SRM 658 DIV2 Hard - OddEvenTreeHard</title>
      <link>https://chaingng.github.io/post/srm-658-div2-hard---oddeventreehard/</link>
      <pubDate>Wed, 06 May 2015 12:40:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-658-div2-hard---oddeventreehard/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13784&amp;amp;rd=16461 Div1 Easyでノード間の情報が？となっている場合が追加されている。 解き方 まずは以下について判定し、有効な木か判定する。 ・自分のノードへの</description>
    </item>
    
    <item>
      <title>SRM 657 DIV1 Easy - ProblemSets x</title>
      <link>https://chaingng.github.io/post/srm-657-div1-easy---problemsets-x/</link>
      <pubDate>Tue, 28 Apr 2015 20:26:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-657-div1-easy---problemsets-x/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13771&amp;amp;rd=16417 ・問題Easy,EM,Middle,MH,Hardの数が与えられる。 ・ここから問題のセットをできるだけ多く作りたい。 ・各問題セットは、</description>
    </item>
    
    <item>
      <title>TCO 2015 1A Middle - Autogame</title>
      <link>https://chaingng.github.io/post/tco-2015-1a-middle---autogame/</link>
      <pubDate>Mon, 27 Apr 2015 22:06:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/tco-2015-1a-middle---autogame/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13716&amp;amp;rd=16433 ノード数Nの有向グラフが与えられる。 エッジの数は最大Nであり、各ノードから出るエッジはひとつだけになる。 このグラフで最初に任意のノード</description>
    </item>
    
    <item>
      <title>TCO 2015 1B Middle - TheTips</title>
      <link>https://chaingng.github.io/post/tco-2015-1b-middle---thetips/</link>
      <pubDate>Mon, 27 Apr 2015 08:00:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/tco-2015-1b-middle---thetips/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13716&amp;amp;rd=16433 N人のクルーが隠れており、そのクルーを見つけたい。 各クルーについては見つけられる確率が与えられている。 また、各クルーについて、そのクル</description>
    </item>
    
    <item>
      <title>SRM 601 DIV1 Easy - WinterAndPresents</title>
      <link>https://chaingng.github.io/post/srm-601-div1-easy---winterandpresents/</link>
      <pubDate>Sat, 25 Apr 2015 07:31:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-601-div1-easy---winterandpresents/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12860&amp;amp;rd=15713 りんごとオレンジが入ったバッグが複数与えられる。 各バッグについて、りんごとオレンジそれぞれ何個入っているかわかっている。 ここで、各バッ</description>
    </item>
    
    <item>
      <title>SRM 603 DIV1 Easy - MaxMinTreeGame</title>
      <link>https://chaingng.github.io/post/srm-603-div1-easy---maxmintreegame/</link>
      <pubDate>Sat, 25 Apr 2015 06:52:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-603-div1-easy---maxmintreegame/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12946&amp;amp;rd=15836 有向グラフが与えられる。 各ノードについてはコストを持つ。 ２人のプレイヤーがゲームを行い、各ターンごとにグラフを２つに分割し、 好きな方の</description>
    </item>
    
    <item>
      <title>SRM 646 DIV2 Middle - TheGridDivTwo</title>
      <link>https://chaingng.github.io/post/srm-646-div2-middle---thegriddivtwo/</link>
      <pubDate>Tue, 21 Apr 2015 17:08:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-646-div2-middle---thegriddivtwo/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13628&amp;amp;rd=16278 ・２次元の座標が与えられる。 ・（０，０）がスタート地点になり、各ターン上下左右のいずれかに移動することができる。 ・ただし複数の障害物が</description>
    </item>
    
    <item>
      <title>SRM 641 DIV1 Easy - TrianglesContainOrigin x</title>
      <link>https://chaingng.github.io/post/srm-641-div1-easy---trianglescontainorigin-x/</link>
      <pubDate>Tue, 21 Apr 2015 16:45:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-641-div1-easy---trianglescontainorigin-x/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13309&amp;amp;rd=16084 ・２次元の座標上の点が複数与えられる。 ・このうち選んだ３点がなす三角形が原点を含む場合の数を求める。 解き方 まず３点を選んだ時に、その三</description>
    </item>
    
    <item>
      <title>SRM 642 DIV1 Easy - WaitingForBus x</title>
      <link>https://chaingng.github.io/post/srm-642-div1-easy---waitingforbus-x/</link>
      <pubDate>Tue, 21 Apr 2015 16:12:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-642-div1-easy---waitingforbus-x/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13540&amp;amp;rd=16085 ・バスが複数あり、各バスごとに１周にかかる時間と、そのバスが選ばれる確率が与えられる。 ・スタート時にひとつのバスが与えられた確率で選ば</description>
    </item>
    
    <item>
      <title>SRM 656 DIV1 Easy - RandomPancakeStack xx</title>
      <link>https://chaingng.github.io/post/srm-656-div1-easy---randompancakestack-xx/</link>
      <pubDate>Tue, 21 Apr 2015 15:58:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-656-div1-easy---randompancakestack-xx/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13747&amp;amp;rd=16416 ・N個のパンケーキが与えられ、i番目のパンケーキの幅はi+1になる。 また、各パンケーキのおいしさの値が与えられる。 ・ここからパンケーキ</description>
    </item>
    
    <item>
      <title>SRM 643 DIV1 Easy - TheKingsFactorization x○</title>
      <link>https://chaingng.github.io/post/srm-643-div1-easy---thekingsfactorization-x/</link>
      <pubDate>Sun, 19 Apr 2015 12:12:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-643-div1-easy---thekingsfactorization-x/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13594&amp;amp;rd=16086 整数Nを素因数分解したい。 ただし、Nはとても大きいため、Nを素因数分解したときの答えの 昇順に1番目、3番目、、と一つ置きの因数が与えら</description>
    </item>
    
    <item>
      <title>SRM 645 DIV1 Easy - JanuszTheBusinessman</title>
      <link>https://chaingng.github.io/post/srm-645-div1-easy---januszthebusinessman/</link>
      <pubDate>Sun, 19 Apr 2015 11:43:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-645-div1-easy---januszthebusinessman/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13603&amp;amp;rd=16277 ホテルに複数の人が宿泊に訪れる。 各ゲストについて到着日と出発日がわかっている。 ここで、ホテルでプロモーションを行うことができ、プロモー</description>
    </item>
    
    <item>
      <title>SRM 649 DIV1 Easy - Decipherability</title>
      <link>https://chaingng.github.io/post/srm-649-div1-easy---decipherability/</link>
      <pubDate>Sun, 12 Apr 2015 21:35:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-649-div1-easy---decipherability/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13656&amp;amp;rd=16313 ・a～ｚから成る文字列が与えられる。 ・この文字列から、任意のK個の文字を取り除いたとき、それがどの箇所か 特定できればCertain、特</description>
    </item>
    
    <item>
      <title>SRM 647 DIV1 Easy - BuildingTowersEasy x</title>
      <link>https://chaingng.github.io/post/srm-647-div1-easy---buildingtowerseasy-x/</link>
      <pubDate>Sun, 12 Apr 2015 20:54:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-647-div1-easy---buildingtowerseasy-x/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13634&amp;amp;rd=16279 ・N個の建物を建てたい。 ・建物は１からNまですべて連続していなければならなく、隣合う建物の高さの差は １以内でなければならない。 ・また、</description>
    </item>
    
    <item>
      <title>SRM 652 DIV1 Easy - ThePermutationGame </title>
      <link>https://chaingng.github.io/post/srm-652-div1-easy---thepermutationgame/</link>
      <pubDate>Sun, 12 Apr 2015 11:59:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-652-div1-easy---thepermutationgame/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13229&amp;amp;rd=16316 ・１～Nの数それぞれからなる、数字の列が与えられる。 （例）N=2、｛１，２｝ N=3、｛１，２，３｝ ・この数はランダムの回数シャッフルさ</description>
    </item>
    
    <item>
      <title>SRM 653 DIV1 Easy - CountryGroupHard</title>
      <link>https://chaingng.github.io/post/srm-653-div1-easy---countrygrouphard/</link>
      <pubDate>Sun, 12 Apr 2015 10:42:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-653-div1-easy---countrygrouphard/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13688&amp;amp;rd=16317 ・様々な国の人々が、１列になって並んでいる。 ・同じ国の人々は連続して並んでいる。 ・ここで、その国の人がどのように並んでいるか確かめたい</description>
    </item>
    
    <item>
      <title>SRM 654 DIV1 Easy - SquareScores</title>
      <link>https://chaingng.github.io/post/srm-654-div1-easy---squarescores/</link>
      <pubDate>Sun, 12 Apr 2015 10:27:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-654-div1-easy---squarescores/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13694&amp;amp;rd=16318 ・ある文字列が与えられる。 ・文字列はaからzのアルファベット、もしくは?から成る。 ・?の場合、aからzの任意の文字列が入る。 ・また、あ</description>
    </item>
    
    <item>
      <title>SRM 655 DIV1 Easy - BichromePainting</title>
      <link>https://chaingng.github.io/post/srm-655-div1-easy---bichromepainting/</link>
      <pubDate>Sat, 11 Apr 2015 10:02:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-655-div1-easy---bichromepainting/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13709&amp;amp;rd=16415 ・２次元のボードがあり、各セルは最初すべて白に塗られている。 ・プレイヤーはK*Kの正方形のマスをすべて白か黒に上塗りすることができる。</description>
    </item>
    
    <item>
      <title>SRM 612 DIV2 Middle - EmoticonsDiv2 (○○)</title>
      <link>https://chaingng.github.io/post/srm-612-div2-middle---emoticonsdiv2-/</link>
      <pubDate>Thu, 19 Mar 2015 20:29:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-612-div2-middle---emoticonsdiv2-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13041 ・笑顔のアイコンをsmiles数だけ送りたい。 ・最初は１個のアイコンだけすでに送られており、クリップボードは空になっている。 ・送り方と</description>
    </item>
    
    <item>
      <title>SRM 619 DIV2 Middle - ChooseTheBestOne (×○)</title>
      <link>https://chaingng.github.io/post/srm-619-div2-middle---choosethebestone-/</link>
      <pubDate>Thu, 19 Mar 2015 20:07:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-619-div2-middle---choosethebestone-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13146 ・N人が円になって並んでいる。 ・そこから各ターンｔごとにｔ＾３番目にいる人を消し、その次の人へ移動する。 ・このとき、最後に残る人の番号</description>
    </item>
    
    <item>
      <title>SRM 596 DIV2 Middle - ColorfulRoad (○○)</title>
      <link>https://chaingng.github.io/post/srm-596-div2-middle---colorfulroad-/</link>
      <pubDate>Thu, 19 Mar 2015 19:53:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-596-div2-middle---colorfulroad-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12837 複数のタイルからなる１列の道路があり、各タイルは赤、緑、青のいずれかの色が塗られている。 また、最初のタイルは赤色である。 このタイルから</description>
    </item>
    
    <item>
      <title>SRM 621 DIV2 Middle - NumbersChallenge (○○)</title>
      <link>https://chaingng.github.io/post/srm-621-div2-middle---numberschallenge-/</link>
      <pubDate>Thu, 19 Mar 2015 19:19:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-621-div2-middle---numberschallenge-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13166 ・整数の集合Sが与えられる。 ・この整数の組み合わせで表わせないような、最小の正の整数を求める。 解き方 ・Sの数が２０、各要素が10^5か</description>
    </item>
    
    <item>
      <title>SRM 648 DIV2 Middle - Fragile2 (○)</title>
      <link>https://chaingng.github.io/post/srm-648-div2-middle---fragile2-/</link>
      <pubDate>Mon, 16 Mar 2015 20:27:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-648-div2-middle---fragile2-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13648&amp;amp;rd=16312 ・無向グラフの隣接行列のリストが与えられる。 ・このうち２つの頂点を選び、グラフから消した時に木の集合が増える 頂点の選び方を全て求める。</description>
    </item>
    
    <item>
      <title>SRM 650 DIV1 Easy - TaroFillingAStringDiv1 (○)</title>
      <link>https://chaingng.github.io/post/srm-650-div1-easy---tarofillingastringdiv1-/</link>
      <pubDate>Mon, 16 Mar 2015 20:11:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-650-div1-easy---tarofillingastringdiv1-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13669&amp;amp;rd=16314 ・AとBから成る文字列を作りたい。 ・ただし、i番目の文字はAかBか決まっており、最初にその情報が与えられる。 ・また、できるだけAとBが</description>
    </item>
    
    <item>
      <title>SRM 648 DIV1 Easy - AB (×)</title>
      <link>https://chaingng.github.io/post/srm-648-div1-easy---ab-/</link>
      <pubDate>Mon, 16 Mar 2015 20:03:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-648-div1-easy---ab-/</guid>
      <description>問題 ・文字の長さがNであり、’A’か’B’から成る文字列を作りたい。 ・ただし、Aより後ろのどこかにBがあるペアをK個作りたい。 ・そのような文</description>
    </item>
    
    <item>
      <title>SRM 639 DIV2 Middle - AliceGameEasy (○)</title>
      <link>https://chaingng.github.io/post/srm-639-div2-middle---alicegameeasy-/</link>
      <pubDate>Mon, 16 Mar 2015 19:25:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-639-div2-middle---alicegameeasy-/</guid>
      <description>問題 ・整数ｘとｙが与えられる。 ・ｘ＝０、ｙ＝０からスタートし、１から順に数を増やしていき毎回ｘとｙのどちらかにその数を足す。 ・与えられたｘと</description>
    </item>
    
    <item>
      <title>SRM 645 DIV2 Middle - ConnectingCars (○)</title>
      <link>https://chaingng.github.io/post/srm-645-div2-middle---connectingcars-/</link>
      <pubDate>Mon, 16 Mar 2015 19:15:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-645-div2-middle---connectingcars-/</guid>
      <description>問題 ・一列の道路に車が複数あり、その車の先頭位置とその長さが与えられる。 ・全ての車を連結したいとき、必要となる最小の移動距離を求める。 解き方</description>
    </item>
    
    <item>
      <title>SRM 646 DIV1 Easy - TheConsecutiveIntegersDivOne x○</title>
      <link>https://chaingng.github.io/post/srm-646-div1-easy---theconsecutiveintegersdivone-x/</link>
      <pubDate>Sun, 15 Mar 2015 11:41:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-646-div1-easy---theconsecutiveintegersdivone-x/</guid>
      <description>問題 ・複数の数字が与えられる。 ・ｋ個の数字が連続して並ぶようにしたい。 ・数字を１つ動かすのにコストが１かかるとき、最小のコストを求める。 解き</description>
    </item>
    
    <item>
      <title>SRM 647 DIV2 Middle - TravellingSalesmanEasy (○)</title>
      <link>https://chaingng.github.io/post/srm-647-div2-middle---travellingsalesmaneasy-/</link>
      <pubDate>Sun, 15 Mar 2015 11:22:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-647-div2-middle---travellingsalesmaneasy-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13631&amp;amp;rd=16279 ・M個の都市があり、その訪問順が決まっている。 ・複数のアイテムについて、そのアイテムを売った時の利益と、そのアイテムを売ることができる</description>
    </item>
    
    <item>
      <title>SRM 642 DIV2 Middle - LightSwitchingPuzzle (○)</title>
      <link>https://chaingng.github.io/post/srm-642-div2-middle---lightswitchingpuzzle-/</link>
      <pubDate>Sun, 15 Mar 2015 10:40:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-642-div2-middle---lightswitchingpuzzle-/</guid>
      <description>問題 ・N個のスイッチがある。 ・各スイッチはONかOFFの状態を持ち、その初期状態が与えられる。 ・各スイッチはその位置の倍数のスイッチと連動し</description>
    </item>
    
    <item>
      <title>SRM 640 DIV1 Easy - ChristmasTreeDecoration (○)</title>
      <link>https://chaingng.github.io/post/srm-640-div1-easy---christmastreedecoration-/</link>
      <pubDate>Thu, 11 Dec 2014 08:46:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-640-div1-easy---christmastreedecoration-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13551&amp;amp;rd=16083 ・クリスマスツリーをデコレーションするのに、N個の星とN-1個のリボンがある。 ・星には色がついていて、全ての星をリボンで一つにつなげた</description>
    </item>
    
    <item>
      <title>SRM 595 DIV1 Easy - LittleElephantAndIntervalsDiv1 (×○)</title>
      <link>https://chaingng.github.io/post/srm-595-div1-easy---littleelephantandintervalsdiv1-/</link>
      <pubDate>Wed, 10 Dec 2014 21:46:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-595-div1-easy---littleelephantandintervalsdiv1-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12822&amp;amp;rd=15707 M個のボールがあり、１からMまで順番に番号がついている。 ボールの色は最初は白。 複数のステージが与えられ、各ステージiについてL[i]番</description>
    </item>
    
    <item>
      <title>SRM 597 DIV1 Easy - LittleElephantAndString (○)</title>
      <link>https://chaingng.github.io/post/srm-597-div1-easy---littleelephantandstring-/</link>
      <pubDate>Wed, 10 Dec 2014 21:40:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-597-div1-easy---littleelephantandstring-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12854&amp;amp;rd=15709 文字列の長さが同じである、文字列Aと文字列Bが与えられる。 文字列Aの任意の文字を１つ選んで、先頭に持ってくる動作を繰り返して文字列Bに</description>
    </item>
    
    <item>
      <title>SRM 598 DIV1 Easy - BinPacking (○×)</title>
      <link>https://chaingng.github.io/post/srm-598-div1-easy---binpacking-/</link>
      <pubDate>Wed, 10 Dec 2014 21:34:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-598-div1-easy---binpacking-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12861&amp;amp;rd=15710 複数のアイテムが与えられ、それを瓶に格納したい。 １つの瓶には重さ３００までのアイテムしか入れられない。 各アイテムの重さがわかっていると</description>
    </item>
    
    <item>
      <title>SRM 633 DIV1 Easy - PeriodicJumping (×××)</title>
      <link>https://chaingng.github.io/post/srm-633-div1-easy---periodicjumping-/</link>
      <pubDate>Mon, 24 Nov 2014 21:25:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-633-div1-easy---periodicjumping-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13234&amp;amp;rd=16076 ・点（０，０）からスタートし、ゴール（ｘ、０）まで到達したい。 ・ジャンプして移動することができ、ジャンプできる距離の配列が与えられる。</description>
    </item>
    
    <item>
      <title>SRM 609 DIV1 Easy - MagicalStringDiv1 (○)</title>
      <link>https://chaingng.github.io/post/srm-609-div1-easy---magicalstringdiv1-/</link>
      <pubDate>Sat, 22 Nov 2014 23:04:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-609-div1-easy---magicalstringdiv1-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13003&amp;amp;rd=15842 ・’＜’と’＞’で表わされる配列が与えられる。 ・この配列から、順序を保って任意の文字を抜き出したサブ文字列を考える。 ・このサブ文字列が</description>
    </item>
    
    <item>
      <title>SRM 605 DIV1 Easy - AlienAndHamburgers (○)</title>
      <link>https://chaingng.github.io/post/srm-605-div1-easy---alienandhamburgers-/</link>
      <pubDate>Sat, 22 Nov 2014 15:48:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-605-div1-easy---alienandhamburgers-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12948&amp;amp;rd=15838 ・様々なハンバーガーがあり、そのタイプと大きさが与えられる。 ・好きなだけハンバーガーを選んでよく、選んだ後のスコアは選んだタイプの種類</description>
    </item>
    
    <item>
      <title>SRM 610 DIV1 Easy - TheMatrix (×○)</title>
      <link>https://chaingng.github.io/post/srm-610-div1-easy---thematrix-/</link>
      <pubDate>Tue, 18 Nov 2014 08:57:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-610-div1-easy---thematrix-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13035&amp;amp;rd=15843 ・白と黒で表わされる２次元のボードが与えられる。 ・ここから任意の長方形を選び、それが交互に白と黒が現れる模様であればそれはチェスボード</description>
    </item>
    
    <item>
      <title>SRM 612 DIV1 Easy - EmoticonsDiv1 (××○)</title>
      <link>https://chaingng.github.io/post/srm-612-div1-easy---emoticonsdiv1-/</link>
      <pubDate>Sat, 15 Nov 2014 21:52:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-612-div1-easy---emoticonsdiv1-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=10543&amp;amp;rd=15845 ・笑顔の顔文字をsmiles分送りたい。 ・最初はsmiles１個分送っている。 ・１回の操作で、現在の送っている数をクリップボードにコピ</description>
    </item>
    
    <item>
      <title>SRM 611 DIV1 Easy - LCMSet (××)</title>
      <link>https://chaingng.github.io/post/srm-611-div1-easy---lcmset-/</link>
      <pubDate>Sat, 15 Nov 2014 20:45:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-611-div1-easy---lcmset-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12918&amp;amp;rd=15844 ・数字のセットAとBが与えられる。 ・与えられた数字のセットXに対し、その任意の組み合わせのLCMで作られる集合をLCM（X)とする。 ・</description>
    </item>
    
    <item>
      <title>SRM 613 DIV1 Easy - TaroFriends (復習○)</title>
      <link>https://chaingng.github.io/post/srm-613-div1-easy---tarofriends-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Fri, 14 Nov 2014 19:46:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-613-div1-easy---tarofriends-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13005&amp;amp;rd=15846 ・猫が一直線上に数匹存在する。 ・それぞれの猫が１度移動し、その移動する距離はDであることがわかっている。 ・ただし、左側もしくは右側のど</description>
    </item>
    
    <item>
      <title>SRM 616 DIV1 Easy - WakingUp (○)</title>
      <link>https://chaingng.github.io/post/srm-616-div1-easy---wakingup-/</link>
      <pubDate>Thu, 13 Nov 2014 19:15:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-616-div1-easy---wakingup-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13124&amp;amp;rd=15849 ・Alexは深く眠っており、どれだけ眠りが深いかはわかっていない。 ・ただし、1秒ごとにDずつ眠りが深くなっていく。 ・目覚まし時計が複数</description>
    </item>
    
    <item>
      <title>SRM 615 DIV1 Easy - AmebaDiv1 (×○)</title>
      <link>https://chaingng.github.io/post/srm-615-div1-easy---amebadiv1-/</link>
      <pubDate>Wed, 12 Nov 2014 19:57:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-615-div1-easy---amebadiv1-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13088&amp;amp;rd=15848 ・アメーバがいて、同じ大きさのジェルがあればそれを吸収して２倍の大きさになる。 ・アメーバの最初の大きさはわかっていない。 ・アメーバがあ</description>
    </item>
    
    <item>
      <title>SRM 618 DIV1 Easy - Family (復習○)</title>
      <link>https://chaingng.github.io/post/srm-618-div1-easy---family-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Mon, 10 Nov 2014 19:42:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-618-div1-easy---family-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=10541&amp;amp;rd=15851 ・有効グラフが２つ与えられる。 ・それぞれのグラフは親と子の関係を示しており、ｘ→ｙのときｘが親、ｙが子になる。 ・子は親がいないか、２人</description>
    </item>
    
    <item>
      <title>SRM 617 DIV1 Easy - MyLongCake (○)</title>
      <link>https://chaingng.github.io/post/srm-617-div1-easy---mylongcake-/</link>
      <pubDate>Mon, 10 Nov 2014 19:35:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-617-div1-easy---mylongcake-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13137&amp;amp;rd=15850 ・ある長さｎのケーキがある。 ・人が何人訪れるかわかっていないが、ｎの約数の人数だけ人が訪れる可能性がある。 ・１人人が現れた時、あらかじ</description>
    </item>
    
    <item>
      <title>SRM 637 DIV1 Easy - DivisorsPower (○)</title>
      <link>https://chaingng.github.io/post/srm-637-div1-easy---divisorspower-/</link>
      <pubDate>Sat, 08 Nov 2014 12:13:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-637-div1-easy---divisorspower-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13504&amp;amp;rd=16080 ・1から2Nまで書かれた、2N枚のカードがあり、2人でゲームを行う。 ・このカードが自分と相手それぞれ均等に配られる。 ・2人が一枚ずつカ</description>
    </item>
    
    <item>
      <title>SRM 628 DIV1 Easy - DivisorsPower (×)</title>
      <link>https://chaingng.github.io/post/srm-628-div1-easy---divisorspower-/</link>
      <pubDate>Fri, 07 Nov 2014 21:28:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-628-div1-easy---divisorspower-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13241&amp;amp;rd=16009 ・ある正の整数nを考えた時、その約数の数である関数d(n)とh(n)=n*d(n)を考える。 ・nが与えられた時、h(x)を満たす最も小</description>
    </item>
    
    <item>
      <title>SRM 627 DIV1 Easy -  HappyLetterDiv1 (××)</title>
      <link>https://chaingng.github.io/post/srm-627-div1-easy----happyletterdiv1-/</link>
      <pubDate>Thu, 06 Nov 2014 22:39:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-627-div1-easy----happyletterdiv1-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13274&amp;amp;rd=16008 ・ある文字列が与えられる。 ・２つ異なる文字を選んで消す操作を繰り返し、最後に残るアルファベットがひとつもしくは すべて同じアルファベット</description>
    </item>
    
    <item>
      <title>SRM 626 DIV1 Easy - FixedDiceGameDiv1 (×)</title>
      <link>https://chaingng.github.io/post/srm-626-div1-easy---fixeddicegamediv1-/</link>
      <pubDate>Wed, 05 Nov 2014 18:55:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-626-div1-easy---fixeddicegamediv1-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13239&amp;amp;rd=15859 ・AliceとBobでゲームを行う。 ・Aliceはa個b面あるサイコロを投げ、Bobはc個d面あるサイコロを投げる。 ・b面あるサイコロ</description>
    </item>
    
    <item>
      <title>SRM 625 DIV1 Easy - PalindromePermutations (×)</title>
      <link>https://chaingng.github.io/post/srm-625-div1-easy---palindromepermutations-/</link>
      <pubDate>Wed, 05 Nov 2014 10:01:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-625-div1-easy---palindromepermutations-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11856&amp;amp;rd=15858 ・ある文字列が与えられる。 ・この文字をシャッフルした時に、回文となる確率を求める。 解き方 ・まず与えられた文字列が回文となるかどうか判定</description>
    </item>
    
    <item>
      <title>SRM 624 DIV1 Easy - BuildingHeights (×)</title>
      <link>https://chaingng.github.io/post/srm-624-div1-easy---buildingheights-/</link>
      <pubDate>Tue, 04 Nov 2014 19:24:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-624-div1-easy---buildingheights-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13211&amp;amp;rd=15857 ・様々な高さを持つ建物が与えられる。 ・建物の高さを１変えるのにコストが１かかる。 ・同じ建物がｍ個必ずあるようにしたい。 ・建物の数をｎと</description>
    </item>
    
    <item>
      <title>SRM 622 DIV1 Easy - BuildingRoutes ××○</title>
      <link>https://chaingng.github.io/post/srm-622-div1-easy---buildingroutes-/</link>
      <pubDate>Sun, 02 Nov 2014 21:50:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-622-div1-easy---buildingroutes-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13193&amp;amp;rd=15855 ・有向グラフとエッジの距離が与えられる。 ・ある点からある点に行くまでに通る最短の経路を考えるとき、 すべての点から点までの最短経路で通る</description>
    </item>
    
    <item>
      <title>SRM 623 DIV1 Easy - UniformBoard （○）</title>
      <link>https://chaingng.github.io/post/srm-623-div1-easy---uniformboard-/</link>
      <pubDate>Sun, 02 Nov 2014 10:55:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-623-div1-easy---uniformboard-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13209&amp;amp;rd=15856 ・N×Nのボードが与えられる。 ・ボードの各セルには空白、apple,pearいずれかが置かれている。 ・また、１回の操作でappleかp</description>
    </item>
    
    <item>
      <title>SRM 619 DIV1 Easy - SplitStoneGame (××)</title>
      <link>https://chaingng.github.io/post/srm-619-div1-easy---splitstonegame-/</link>
      <pubDate>Sat, 01 Nov 2014 09:58:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-619-div1-easy---splitstonegame-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13113&amp;amp;rd=15852 ・積み重ねられた石の山が複数存在する。 ・それぞれの山について、あらかじめいくつ石が積み重ねられているかわかっている。 ・現在の石の山から</description>
    </item>
    
    <item>
      <title>Windowsのプロキシ</title>
      <link>https://chaingng.github.io/post/windows%E3%81%AE%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7/</link>
      <pubDate>Fri, 31 Oct 2014 22:24:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/windows%E3%81%AE%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7/</guid>
      <description>Windowsのプロキシには２種類存在する。 １つめはInternetExplorerのプロキシサーバー設定、もう一つは主にWindows Up</description>
    </item>
    
    <item>
      <title>SRM 620 DIV1 Easy - PairGame (××)</title>
      <link>https://chaingng.github.io/post/srm-620-div1-easy---pairgame-/</link>
      <pubDate>Fri, 31 Oct 2014 19:49:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-620-div1-easy---pairgame-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13142&amp;amp;rd=15853 ・(x,y)のペアを考える。 ・このペアは(x+y,y)もしくは（x,x+y）のペアに変換することができる。 ・(a,b),(c,d)のペ</description>
    </item>
    
    <item>
      <title>makeの種類</title>
      <link>https://chaingng.github.io/post/make%E3%81%AE%E7%A8%AE%E9%A1%9E/</link>
      <pubDate>Fri, 31 Oct 2014 19:16:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/make%E3%81%AE%E7%A8%AE%E9%A1%9E/</guid>
      <description>makeにはいくつかの種類がある。 ・GNU make &amp;nbsp;gmakeとかいわれる。 &amp;nbsp;UNIX系で標準的に使われるもので、Window</description>
    </item>
    
    <item>
      <title>サービスの自動起動</title>
      <link>https://chaingng.github.io/post/%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%AE%E8%87%AA%E5%8B%95%E8%B5%B7%E5%8B%95/</link>
      <pubDate>Thu, 30 Oct 2014 12:13:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%AE%E8%87%AA%E5%8B%95%E8%B5%B7%E5%8B%95/</guid>
      <description>chkconfigを使う。 ランレベル２～５での自動起動 chkconfig httpd on 起動レベルを指定（ランレベル３，５で起動） chkconfig httpd on --level 35 自動起動しているサービス一覧</description>
    </item>
    
    <item>
      <title>linuxで複数のファイルを結合</title>
      <link>https://chaingng.github.io/post/linux%E3%81%A7%E8%A4%87%E6%95%B0%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E7%B5%90%E5%90%88/</link>
      <pubDate>Wed, 29 Oct 2014 18:28:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/linux%E3%81%A7%E8%A4%87%E6%95%B0%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E7%B5%90%E5%90%88/</guid>
      <description>catコマンドを使う。 下記のコマンドで指定したディレクトリ以下の全てのファイルを結合し、 newfilename.txtにその結果を保存できる</description>
    </item>
    
    <item>
      <title>数学Aの順列（１）</title>
      <link>https://chaingng.github.io/post/%E6%95%B0%E5%AD%A6a%E3%81%AE%E9%A0%86%E5%88%97%EF%BC%91/</link>
      <pubDate>Sat, 18 Oct 2014 21:57:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E6%95%B0%E5%AD%A6a%E3%81%AE%E9%A0%86%E5%88%97%EF%BC%91/</guid>
      <description>プログラムで場合の数の問題がしばしば出てくるので 数学の順列の問題の解き方整理。 （１）ある場合の数からある条件を含まない場合を求めたいときは そ</description>
    </item>
    
    <item>
      <title>SRM 636 DIV1 Easy - ChocolateDividingEasy (×)</title>
      <link>https://chaingng.github.io/post/srm-636-div1-easy---chocolatedividingeasy-/</link>
      <pubDate>Sat, 18 Oct 2014 13:41:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-636-div1-easy---chocolatedividingeasy-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13497&amp;amp;rd=16079 １＊１のセルが組み合わされた長方形のチョコレートケーキがある。 各セルごとにおいしさの値が与えられる。 このケーキを横に２つ、縦に２つ切っ</description>
    </item>
    
    <item>
      <title>RISCとCISC</title>
      <link>https://chaingng.github.io/post/risc%E3%81%A8cisc/</link>
      <pubDate>Fri, 17 Oct 2014 23:28:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/risc%E3%81%A8cisc/</guid>
      <description>プロセッサを支える技術から、RISCとCISCについて整理。 RISC（Reduced Instruction Set Computer）は固定長の単純な命令を実行する方式</description>
    </item>
    
    <item>
      <title>wgetをプロキシ経由で利用</title>
      <link>https://chaingng.github.io/post/wget%E3%82%92%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7%E7%B5%8C%E7%94%B1%E3%81%A7%E5%88%A9%E7%94%A8/</link>
      <pubDate>Thu, 16 Oct 2014 20:10:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/wget%E3%82%92%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7%E7%B5%8C%E7%94%B1%E3%81%A7%E5%88%A9%E7%94%A8/</guid>
      <description>/etc/wgetrcに、以下の設定を追加してあげればよい。 use_proxy = on proxy_user = user proxy_password = passwordhttps_proxy = http://proxy.yoyodyne.com:18023/http_proxy = http://proxy.yoyodyne.com:18023/ftp_proxy = http://proxy.yoyodyne.com:18023/ ちなみに、ユーザ名とパスワードの設定はwgetrc</description>
    </item>
    
    <item>
      <title>cygwin&#43;mintty&#43;apt-cygのインストール</title>
      <link>https://chaingng.github.io/post/cygwinminttyapt-cyg%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</link>
      <pubDate>Wed, 15 Oct 2014 22:08:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/cygwinminttyapt-cyg%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</guid>
      <description>windowsでlinuxコマンド等を使うためのcygwin+minttyのインストールメモ。 Cygwinのインストールまで Cygwinのイ</description>
    </item>
    
    <item>
      <title>androidのコードリーディング</title>
      <link>https://chaingng.github.io/post/android%E3%81%AE%E3%82%B3%E3%83%BC%E3%83%89%E3%83%AA%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0/</link>
      <pubDate>Tue, 14 Oct 2014 21:31:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/android%E3%81%AE%E3%82%B3%E3%83%BC%E3%83%89%E3%83%AA%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0/</guid>
      <description>業務でandroidのソースコードを読まなければならなかったときに学んだ、 効率的なソースコードの読み方のメモ。 動的な解析と静的な解析 ソースコ</description>
    </item>
    
    <item>
      <title>ボタンを押すとテキストが変わるandroidアプリ</title>
      <link>https://chaingng.github.io/post/%E3%83%9C%E3%82%BF%E3%83%B3%E3%82%92%E6%8A%BC%E3%81%99%E3%81%A8%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E3%81%8C%E5%A4%89%E3%82%8F%E3%82%8Bandroid%E3%82%A2%E3%83%97%E3%83%AA/</link>
      <pubDate>Mon, 13 Oct 2014 22:16:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E3%83%9C%E3%82%BF%E3%83%B3%E3%82%92%E6%8A%BC%E3%81%99%E3%81%A8%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E3%81%8C%E5%A4%89%E3%82%8F%E3%82%8Bandroid%E3%82%A2%E3%83%97%E3%83%AA/</guid>
      <description>ドットインストールで学んだ、ボタンを押すとテキストが変わるサンプルアプリの 作り方を整理。 http://dotinstall.com/lessons/basic_android 部品にIDをつける レイアウト画面から、ボタンをドラ</description>
    </item>
    
    <item>
      <title>SRM 634 DIV1 Easy - ShoppingSurveyDiv1 (×)</title>
      <link>https://chaingng.github.io/post/srm-634-div1-easy---shoppingsurveydiv1-/</link>
      <pubDate>Mon, 13 Oct 2014 13:51:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-634-div1-easy---shoppingsurveydiv1-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13455&amp;amp;rd=16077 ・N人の客がいて、各商品を多くて１つ買うことができる。 ・また、K種類以上の商品を買うBig Shopperがいる。 ・商品iを買った人数s</description>
    </item>
    
    <item>
      <title>androidにおけるaction／Activity／レイアウト</title>
      <link>https://chaingng.github.io/post/android%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8Bactionactivity%E3%83%AC%E3%82%A4%E3%82%A2%E3%82%A6%E3%83%88/</link>
      <pubDate>Sun, 12 Oct 2014 21:45:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/android%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8Bactionactivity%E3%83%AC%E3%82%A4%E3%82%A2%E3%82%A6%E3%83%88/</guid>
      <description>ドットインストールで学んだ、androidアプリの基礎を整理。 http://dotinstall.com/lessons/basic_android AndroidManifest.xml app&amp;gt;src&amp;gt;mainの下にあるファイル。 activityタ</description>
    </item>
    
    <item>
      <title>短縮URLの仕組み</title>
      <link>https://chaingng.github.io/post/%E7%9F%AD%E7%B8%AEurl%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF/</link>
      <pubDate>Fri, 10 Oct 2014 22:21:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E7%9F%AD%E7%B8%AEurl%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF/</guid>
      <description>整理用にメモ。 短縮URLでアクセスできる仕組みは、要はリダイレクトを利用しているだけ。 サンプルとして、こちらのページで短縮URLを作成してみ</description>
    </item>
    
    <item>
      <title>地上デジタル放送を録画したメディアと再生方法</title>
      <link>https://chaingng.github.io/post/%E5%9C%B0%E4%B8%8A%E3%83%87%E3%82%B8%E3%82%BF%E3%83%AB%E6%94%BE%E9%80%81%E3%82%92%E9%8C%B2%E7%94%BB%E3%81%97%E3%81%9F%E3%83%A1%E3%83%87%E3%82%A3%E3%82%A2%E3%81%A8%E5%86%8D%E7%94%9F%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 09 Oct 2014 18:48:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E5%9C%B0%E4%B8%8A%E3%83%87%E3%82%B8%E3%82%BF%E3%83%AB%E6%94%BE%E9%80%81%E3%82%92%E9%8C%B2%E7%94%BB%E3%81%97%E3%81%9F%E3%83%A1%E3%83%87%E3%82%A3%E3%82%A2%E3%81%A8%E5%86%8D%E7%94%9F%E6%96%B9%E6%B3%95/</guid>
      <description>DVD-VR 地上デジタル放送を家庭のDVDレコーダーで録画した時は「VRモード」となる。 これはDVD-VR(Video Recording Format)と呼ばれるDVD</description>
    </item>
    
    <item>
      <title>android studioのプロキシ設定</title>
      <link>https://chaingng.github.io/post/android-studio%E3%81%AE%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Wed, 08 Oct 2014 20:44:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/android-studio%E3%81%AE%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7%E8%A8%AD%E5%AE%9A/</guid>
      <description>android studioのプロキシ設定のメモ。 HTTP Proxy File&amp;gt;Setting&amp;gt;HTTP Proxyから Manual Proxy Settingを選んで設定。 設定後、「Check Connection」ボタンで正</description>
    </item>
    
    <item>
      <title>GigabitEthernet規格の簡単なまとめ</title>
      <link>https://chaingng.github.io/post/gigabitethernet%E8%A6%8F%E6%A0%BC%E3%81%AE%E7%B0%A1%E5%8D%98%E3%81%AA%E3%81%BE%E3%81%A8%E3%82%81/</link>
      <pubDate>Tue, 07 Oct 2014 21:42:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/gigabitethernet%E8%A6%8F%E6%A0%BC%E3%81%AE%E7%B0%A1%E5%8D%98%E3%81%AA%E3%81%BE%E3%81%A8%E3%82%81/</guid>
      <description>GigabitEthernet規格の簡単なまとめ。 GigabitEthernet系の規格 GigabitEthernet系の規格はIEEE80</description>
    </item>
    
    <item>
      <title>android studioのインストール</title>
      <link>https://chaingng.github.io/post/android-studio%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</link>
      <pubDate>Mon, 06 Oct 2014 19:47:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/android-studio%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</guid>
      <description>android studioのインストールメモ。 まずはここから本体をダウンロード。 https://developer.android.com/sdk/installing/studio.html 後はこちらのページの内容に沿ってインストール。 https://developer.android.com/sdk/installing/index.html?pkg=studio まずはandroid s</description>
    </item>
    
    <item>
      <title>SRM 635 DIV1 Easy - SimilarRatingGraph (×)</title>
      <link>https://chaingng.github.io/post/srm-635-div1-easy---similarratinggraph-/</link>
      <pubDate>Sun, 05 Oct 2014 22:15:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-635-div1-easy---similarratinggraph-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13485&amp;amp;rd=16078 日付とその日付に行われたコンテストの後のレーティングが時系列で与えられる。 そのグラフのうち２つの似通ったサブグラフを探し、最大の長さの</description>
    </item>
    
    <item>
      <title>yumをローカルで使う場合のレポジトリ設定</title>
      <link>https://chaingng.github.io/post/yum%E3%82%92%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%A7%E4%BD%BF%E3%81%86%E5%A0%B4%E5%90%88%E3%81%AE%E3%83%AC%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Sun, 05 Oct 2014 22:10:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/yum%E3%82%92%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%A7%E4%BD%BF%E3%81%86%E5%A0%B4%E5%90%88%E3%81%AE%E3%83%AC%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E8%A8%AD%E5%AE%9A/</guid>
      <description>最初にCDをマウントして、ローカルにデータをコピー。 mkdir -p /mnt/cdrom mount /dev/cdrom /mnt/cdrom mkdir /opt/redhat cp -rp /mnt/cdrom/* /opt/redhat/ umount /mnt/cdrom 次に、必要なrpmパッケージをインストール。 rpm -ivh /opt/redhat/Packages/*.rpm レポジトリ</description>
    </item>
    
    <item>
      <title>JDKのインストール</title>
      <link>https://chaingng.github.io/post/jdk%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</link>
      <pubDate>Sat, 04 Oct 2014 20:51:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/jdk%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</guid>
      <description>こちらのページから対応するOSのJDKをインストール。 http://www.oracle.com/technetwork/java/javase/downloads/index-jsp-138363.html あとは、JAVAHOMEのパスを設定するだけ。</description>
    </item>
    
    <item>
      <title>gitのインストール</title>
      <link>https://chaingng.github.io/post/git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</link>
      <pubDate>Fri, 03 Oct 2014 21:20:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</guid>
      <description>gitのインストールメモ。 GIT EXTENTIONがCUIもGUIも同時にインストールできるのでスグレモノ。 以下のURLのDownloadからm</description>
    </item>
    
    <item>
      <title>yumをローカルで使用する場合のエイリアス</title>
      <link>https://chaingng.github.io/post/yum%E3%82%92%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%A7%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AE%E3%82%A8%E3%82%A4%E3%83%AA%E3%82%A2%E3%82%B9/</link>
      <pubDate>Thu, 02 Oct 2014 18:51:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/yum%E3%82%92%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%A7%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AE%E3%82%A8%E3%82%A4%E3%83%AA%E3%82%A2%E3%82%B9/</guid>
      <description>yumをインターネット経由ではなくローカルで使用したい場合のエイリアス設定。 /etc/bashrcもしくは~/.bashrcについて、以下を</description>
    </item>
    
    <item>
      <title>adbをWi-Fi経由で利用</title>
      <link>https://chaingng.github.io/post/adb%E3%82%92wi-fi%E7%B5%8C%E7%94%B1%E3%81%A7%E5%88%A9%E7%94%A8/</link>
      <pubDate>Wed, 01 Oct 2014 19:20:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/adb%E3%82%92wi-fi%E7%B5%8C%E7%94%B1%E3%81%A7%E5%88%A9%E7%94%A8/</guid>
      <description>端末が増えてくるとそれぞれusb接続してadbコマンドを打つと大変になった。 そこで、usbに接続しなくとも無線LAN経由にてadbを利用する</description>
    </item>
    
    <item>
      <title>SRM 629 DIV1 Easy - RectangleCovering (×)</title>
      <link>https://chaingng.github.io/post/srm-629-div1-easy---rectanglecovering-/</link>
      <pubDate>Fri, 19 Sep 2014 15:36:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-629-div1-easy---rectanglecovering-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13344&amp;amp;rd=16060 長方形のホールがあり、縦と横の長さがわかっている。 また複数の長方形のボードが与えられ、それぞれのボードの縦と横の長さもわかっている。 ホ</description>
    </item>
    
    <item>
      <title>SRM 630 DIV1 Easy - Egalitarianism3 (××)</title>
      <link>https://chaingng.github.io/post/srm-630-div1-easy---egalitarianism3-/</link>
      <pubDate>Fri, 19 Sep 2014 12:43:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-630-div1-easy---egalitarianism3-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13284&amp;amp;rd=16061 エッジのコストがわかっている、無向グラフが与えられる。 このとき、ノード間のコストが全て等しいサブグラフのうち、最も多いノード数を求める</description>
    </item>
    
    <item>
      <title>SRM 631 DIV1 Easy - TaroJiroGrid (復習×)</title>
      <link>https://chaingng.github.io/post/srm-631-div1-easy---tarojirogrid-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Fri, 19 Sep 2014 11:40:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-631-div1-easy---tarojirogrid-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13393&amp;amp;rd=16062 N*Nのボードがあり、WかBの色が塗られている。 １回の操作で１つの行の色をWかB一色にすることができる。 このとき、全ての列について、同</description>
    </item>
    
    <item>
      <title>SRM 632 DIV1 Easy - PotentialArithmeticSequence (×)</title>
      <link>https://chaingng.github.io/post/srm-632-div1-easy---potentialarithmeticsequence-/</link>
      <pubDate>Fri, 19 Sep 2014 10:30:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-632-div1-easy---potentialarithmeticsequence-/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=13389&amp;amp;rd=16075 数字の数列があり、その数字を２進数にしたときの末尾の０の数のリストが与えられる。 このとき、与えられた数列のうち１ずつ増加するサブ数列の</description>
    </item>
    
    <item>
      <title>SRM 585 DIV1 Middle - LISNumber （復習x）</title>
      <link>https://chaingng.github.io/post/srm-585-div1-middle---lisnumber-%E5%BE%A9%E7%BF%92x/</link>
      <pubDate>Wed, 04 Jun 2014 08:07:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-585-div1-middle---lisnumber-%E5%BE%A9%E7%BF%92x/</guid>
      <description>問題 ０からiまでの数字のカードが与えられる。 各数字のカードは、cardsnum[i]枚だけ与えられる。 このとき、カードを並べた時に左からみて</description>
    </item>
    
    <item>
      <title>SRM 605 DIV1 Middle - AlienAndSetDiv1 （復習○）</title>
      <link>https://chaingng.github.io/post/srm-605-div1-middle---alienandsetdiv1-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Mon, 02 Jun 2014 07:58:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-605-div1-middle---alienandsetdiv1-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 1から2Nまでの数字を、２つの集合に分けたい。 各集合にはＮ個の数字が入るようにし、それぞれ昇順でi番目の数字の差がＫ－１以下になるように</description>
    </item>
    
    <item>
      <title>SRM 606 DIV1 Middle - EllysPairing （復習○）</title>
      <link>https://chaingng.github.io/post/srm-606-div1-middle---ellyspairing-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Mon, 02 Jun 2014 07:26:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-606-div1-middle---ellyspairing-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 ペアプログラミングのコンテストを開催する。 各大学から複数の参加者がおり、２人組みのペアを作る。 ペアを作るにあたってどの大学のペアかは関係</description>
    </item>
    
    <item>
      <title>SRM 608 DIV1 Middle - BigO （復習x）</title>
      <link>https://chaingng.github.io/post/srm-608-div1-middle---bigo-%E5%BE%A9%E7%BF%92x/</link>
      <pubDate>Sat, 31 May 2014 13:58:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-608-div1-middle---bigo-%E5%BE%A9%E7%BF%92x/</guid>
      <description>問題 有向グラフが与えられる。 このうち、巨大な経路長Ｌを考え、そのＬの場合の数がＯ（Ｌ＾Ｋ）となるかを知りたい。 Ｏ（Ｌ＾Ｋ）となるときはＫを、</description>
    </item>
    
    <item>
      <title>SRM 611 DIV1 Middle - Egalitarianism2 （復習x）</title>
      <link>https://chaingng.github.io/post/srm-611-div1-middle---egalitarianism2-%E5%BE%A9%E7%BF%92x/</link>
      <pubDate>Sat, 31 May 2014 10:39:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-611-div1-middle---egalitarianism2-%E5%BE%A9%E7%BF%92x/</guid>
      <description>問題 Ｎ個の都市があり、すべての都市についてある都市からある都市までいけるようにしたい。 ただし、そのために引くエッジの距離はできるだけ差がない</description>
    </item>
    
    <item>
      <title>SRM 609 DIV1 Middle - PackingBallsDiv1 （復習○）</title>
      <link>https://chaingng.github.io/post/srm-609-div1-middle---packingballsdiv1-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sat, 31 May 2014 07:04:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-609-div1-middle---packingballsdiv1-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 Ｋ種類のボールがそれぞれX[i]個存在する。 各X[i]は、あらかじめ与えられるA,B,C,Dを用いて以下の式で求められる。 X[0]=A; X[i]=(X[i-1]*B+C)%D+1 ここで、全</description>
    </item>
    
    <item>
      <title>SRM 613 DIV1 Middle - RandomGCD (復習x)</title>
      <link>https://chaingng.github.io/post/srm-613-div1-middle---randomgcd-%E5%BE%A9%E7%BF%92x/</link>
      <pubDate>Thu, 29 May 2014 22:57:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-613-div1-middle---randomgcd-%E5%BE%A9%E7%BF%92x/</guid>
      <description>問題 lowからhighまでの数字のうち、最大公約数がKとなるようにN個の数字の集合を作る。 このとき、同じ数字を何回選んでもよい。 このとき、数</description>
    </item>
    
    <item>
      <title>SRM 615 DIV1 Middle - LongLongTripDiv1　（復習×）</title>
      <link>https://chaingng.github.io/post/srm-615-div1-middle---longlongtripdiv1%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Thu, 29 May 2014 08:38:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-615-div1-middle---longlongtripdiv1%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 Ｎ個の都市が存在する。 ある都市A[i]とB[i]を結ぶコストD[i]があらかじめわかっている。 このとき、都市0から都市N-1までちょうど</description>
    </item>
    
    <item>
      <title>SRM 616 DIV1 Middle - ColorfulCoins　（復習×）</title>
      <link>https://chaingng.github.io/post/srm-616-div1-middle---colorfulcoins%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 25 May 2014 19:48:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-616-div1-middle---colorfulcoins%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 硬貨が複数種類存在し、１枚当たりの価値value[i]があらかじめわかっている。 それぞれの硬貨は異なる色をしている。 またＡＴＭが存在し、</description>
    </item>
    
    <item>
      <title>SRM 618 DIV1 Middle - LongWordsDiv1 (復習x)</title>
      <link>https://chaingng.github.io/post/srm-618-div1-middle---longwordsdiv1-%E5%BE%A9%E7%BF%92x/</link>
      <pubDate>Fri, 23 May 2014 13:40:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-618-div1-middle---longwordsdiv1-%E5%BE%A9%E7%BF%92x/</guid>
      <description>問題 ｎ種類の文字が与えられる。 これを、以下の条件にあてはまらないようにできるだけ長い文字列を作成する。 （１）同じ文字が２つ連続しないこと （２</description>
    </item>
    
    <item>
      <title>SRM 509 DIV1 Middle - PalindromizationDiv1　（復習×）</title>
      <link>https://chaingng.github.io/post/srm-509-div1-middle---palindromizationdiv1%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Mon, 19 May 2014 21:55:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-509-div1-middle---palindromizationdiv1%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 ある文字列が与えられ、それを回文にしたい。 回文にするために複数のアルファベットの追加、削除、変換式が与えられ、各変換式について必要なコス</description>
    </item>
    
    <item>
      <title>SRM 578 DIV1 Middle - WolfInZooDivOne （復習x）</title>
      <link>https://chaingng.github.io/post/srm-578-div1-middle---wolfinzoodivone-%E5%BE%A9%E7%BF%92x/</link>
      <pubDate>Sun, 18 May 2014 15:04:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-578-div1-middle---wolfinzoodivone-%E5%BE%A9%E7%BF%92x/</guid>
      <description>問題 Ｎ個のセクションに区切られた道路を渡りたい。 ただし、各セクションには多くて１匹の狼がいるので注意して歩かなくてはいけない。 今回上記に加え</description>
    </item>
    
    <item>
      <title>SRM 548 DIV1 Middle - KingdomAndDice　（復習○）</title>
      <link>https://chaingng.github.io/post/srm-548-div1-middle---kingdomanddice%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Tue, 13 May 2014 23:06:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-548-div1-middle---kingdomanddice%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 サイコロが２つあり、２人のプレイヤーがそれぞれ１つのサイコロを振って出た目が大きい方が勝つゲームを行う。 ゲームはできるだけ公平にしたいの</description>
    </item>
    
    <item>
      <title>SRM 610 DIV1 Middle - AlbertoTheAviator　（復習×）</title>
      <link>https://chaingng.github.io/post/srm-610-div1-middle---albertotheaviator%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Fri, 02 May 2014 20:11:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-610-div1-middle---albertotheaviator%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 車を運転しており、最初に持っている燃料Fが与えられる。 また、複数の給油ポイントがあり、そこまでにいくのに必要な燃料durationと給油</description>
    </item>
    
    <item>
      <title>SRM 617 DIV1 Middle - PieOrDolphin　（復習×）</title>
      <link>https://chaingng.github.io/post/srm-617-div1-middle---pieordolphin%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sat, 26 Apr 2014 23:20:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-617-div1-middle---pieordolphin%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 ５０人のプレイヤーが存在する。 毎日コンテストを行い、その勝者２名にイルカ１つとパイ１つをプレゼントする。 どちらにイルカ、どちらにパイをプ</description>
    </item>
    
    <item>
      <title>SRM 588 DIV1 Middle - KeyDungeonDiv1　（復習×）</title>
      <link>https://chaingng.github.io/post/srm-588-div1-middle---keydungeondiv1%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Wed, 16 Apr 2014 23:13:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-588-div1-middle---keydungeondiv1%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 最初に赤い鍵をkey[0]個、緑の鍵をkey[1]個、白い鍵をkey[2]個与えられる。 ドアが複数存在し、ドアごとに空けるために必要な赤</description>
    </item>
    
    <item>
      <title>SRM 511 DIV1 Middle - FiveHundredEleven　（復習×）</title>
      <link>https://chaingng.github.io/post/srm-511-div1-middle---fivehundredeleven%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Mon, 14 Apr 2014 23:32:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-511-div1-middle---fivehundredeleven%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 ０～５１１の間である数字の配列が与えられ、2人でゲームを行う。 最初はFoxの番から始まり、次はToastmanの番になる。 ゲームは配列か</description>
    </item>
    
    <item>
      <title>SRM 614 DIV1 Easy - MinimumSquare　（復習××）</title>
      <link>https://chaingng.github.io/post/srm-614-div1-easy---minimumsquare%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 30 Mar 2014 08:45:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-614-div1-easy---minimumsquare%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12976 座標上に複数の点が与えられる。 座標上に正方形を描き、その正方形の中に少なくともＫ個以上与えられた点が入っているようににしたい。 このとき</description>
    </item>
    
    <item>
      <title>LinuxでCPUやメモリ使用状況のログを取る方法</title>
      <link>https://chaingng.github.io/post/linux%E3%81%A7cpu%E3%82%84%E3%83%A1%E3%83%A2%E3%83%AA%E4%BD%BF%E7%94%A8%E7%8A%B6%E6%B3%81%E3%81%AE%E3%83%AD%E3%82%B0%E3%82%92%E5%8F%96%E3%82%8B%E6%96%B9%E6%B3%95/</link>
      <pubDate>Wed, 12 Mar 2014 19:55:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/linux%E3%81%A7cpu%E3%82%84%E3%83%A1%E3%83%A2%E3%83%AA%E4%BD%BF%E7%94%A8%E7%8A%B6%E6%B3%81%E3%81%AE%E3%83%AD%E3%82%B0%E3%82%92%E5%8F%96%E3%82%8B%E6%96%B9%E6%B3%95/</guid>
      <description>Linux(使っているのはRedhat Enterprise Linux 6.3)でCPU負荷とメモリ使用状況のログを取る必要があったので使い方をメモ。 ①CPU使用率とメモ</description>
    </item>
    
    <item>
      <title>SRM 510 DIV1 Middle - TheLuckyGameDivOne　（復習×××）</title>
      <link>https://chaingng.github.io/post/srm-510-div1-middle---theluckygamedivone%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Wed, 05 Mar 2014 08:37:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-510-div1-middle---theluckygamedivone%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11463 4と７からなる数字をluckynumberと呼ぶ。 数字の範囲a&amp;lt;=x&amp;lt;=bであるa,bが最初に与えられ、JohnとBrus</description>
    </item>
    
    <item>
      <title>SRM 515 DIV1 Middle - NewItemShop　（復習×××）</title>
      <link>https://chaingng.github.io/post/srm-515-div1-middle---newitemshop%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Mon, 03 Mar 2014 22:44:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-515-div1-middle---newitemshop%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11508&amp;amp;rd=14540 売り物である剣を任意の数持っており、複数の顧客が訪れる。 各顧客について、&#34;時間、買う値段、来る確率&#34;で表わされる情報が複数個与えられる</description>
    </item>
    
    <item>
      <title>SRM 534 DIV1 Middle - EllysNumbers　（復習×××）</title>
      <link>https://chaingng.github.io/post/srm-534-div1-middle---ellysnumbers%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 02 Mar 2014 23:13:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-534-div1-middle---ellysnumbers%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11787&amp;amp;rd=14727 エリーが好きな数であるｎが存在する。 ここで、複数の数が与えられ、その中から任意の数選んだ数字の積がｎになるようにしたい。 ただし、選んだ</description>
    </item>
    
    <item>
      <title>SRM 531 DIV1 Middle - MonsterFarm　（復習××○）</title>
      <link>https://chaingng.github.io/post/srm-531-div1-middle---monsterfarm%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sat, 01 Mar 2014 23:09:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-531-div1-middle---monsterfarm%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11232&amp;amp;rd=14724 各ノードごとに、次に変換するノードが与えられる。 次に変換するノードは１つ以上になる。 ノード０からスタートするとき、最後に収束するノード</description>
    </item>
    
    <item>
      <title>SRM 522 DIV1 Middle - CorrectMultiplication　（復習×××）</title>
      <link>https://chaingng.github.io/post/srm-522-div1-middle---correctmultiplication%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sat, 01 Mar 2014 14:16:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-522-div1-middle---correctmultiplication%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11604&amp;amp;rd=14547 正の整数a,b,cが与えられる。 正の整数A,B,Cがa,b,cをそれぞれ増減した値であるとき A*B=Cが成り立つ、|A-a|+|B-b</description>
    </item>
    
    <item>
      <title>SRM 535 DIV1 Middle - FoxAndBusiness　（復習×××）</title>
      <link>https://chaingng.github.io/post/srm-535-div1-middle---foxandbusiness%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sat, 01 Mar 2014 11:26:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-535-div1-middle---foxandbusiness%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11454&amp;amp;rd=15037 ワーカーが複数存在し、それぞれのワーカーi について以下がわかっている。 a[i]:１時間あたりにこなせる仕事の数 p[i]:仕事あたりにか</description>
    </item>
    
    <item>
      <title>SRM 546 DIV1 Middle - FavouriteDigits　（復習×××）</title>
      <link>https://chaingng.github.io/post/srm-546-div1-middle---favouritedigits%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 23 Feb 2014 19:09:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-546-div1-middle---favouritedigits%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12045&amp;amp;rd=14738 ある数字が与えられる。 プレイヤーは好きな数字を２つもっており、それぞれ決められた個数だけ含んでいる数にしたい。 ある数字以上であり、かつ</description>
    </item>
    
    <item>
      <title>SRM 556 DIV1 Middle - LeftRightDigitsGame2　（復習×××）</title>
      <link>https://chaingng.github.io/post/srm-556-div1-middle---leftrightdigitsgame2%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 23 Feb 2014 14:50:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-556-div1-middle---leftrightdigitsgame2%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12198&amp;amp;rd=15178 ある数字の列が与えられる。 数字列の左側から順に、空白から始めてその左側もしくは右側に足していって新たな数字の列を作ることができる。 また</description>
    </item>
    
    <item>
      <title>SRM 586 DIV1 Middle - History　（復習×××）</title>
      <link>https://chaingng.github.io/post/srm-586-div1-middle---history%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 23 Feb 2014 11:02:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-586-div1-middle---history%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12692&amp;amp;rd=15698 複数の王朝があり、各王朝ごとに皇帝ごとの在位期間がわかっている。 ただし王朝ごとに年号の割り振り方が違うので、年数は必ずしも一致していな</description>
    </item>
    
    <item>
      <title>SRM 593 DIV1 Middle - MayTheBestPetWin　（復習××○）</title>
      <link>https://chaingng.github.io/post/srm-593-div1-middle---maythebestpetwin%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sat, 22 Feb 2014 19:29:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-593-div1-middle---maythebestpetwin%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12779&amp;amp;rd=15705 複数のペットがおり、各ペットごとにトラックを走りきる最小の時間と最大の時間が与えられる。 ペットを２つのチームに分けてチームごとに競争さ</description>
    </item>
    
    <item>
      <title>SRM 599 DIV1 Middle - FindPolygons　（復習×××）</title>
      <link>https://chaingng.github.io/post/srm-599-div1-middle---findpolygons%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sat, 22 Feb 2014 15:54:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-599-div1-middle---findpolygons%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12842&amp;amp;rd=15711 多角形の外周の長さである、整数Ｌが与えられる。 多角形の各点はｘ、ｙ座標上になければいけない。 このとき、考えられる多角形のうち、辺の数が</description>
    </item>
    
    <item>
      <title>SRM 593 DIV1 Easy - HexagonalBoard (復習××)</title>
      <link>https://chaingng.github.io/post/srm-593-div1-easy---hexagonalboard-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sat, 22 Feb 2014 08:52:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-593-div1-easy---hexagonalboard-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12784&amp;amp;rd=15705 ５角形のセルからなるボードがあり、任意の場所に石が置いてある。 石が隣り合うときは、かならず違う色にしなければいけない。 このとき、全ての</description>
    </item>
    
    <item>
      <title>SRM 591 DIV1 Easy - TheTree (復習×○)</title>
      <link>https://chaingng.github.io/post/srm-591-div1-easy---thetree-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Thu, 13 Feb 2014 15:08:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-591-div1-easy---thetree-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12746&amp;amp;rd=15703 グラフの各深さに対する頂点数が与えられる。 このとき、そのグラフの直径を求める。 解き方 グラフを最大のケースで作ってもよいが、場合分けをす</description>
    </item>
    
    <item>
      <title>ブートローダー</title>
      <link>https://chaingng.github.io/post/%E3%83%96%E3%83%BC%E3%83%88%E3%83%AD%E3%83%BC%E3%83%80%E3%83%BC/</link>
      <pubDate>Sun, 09 Feb 2014 18:34:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E3%83%96%E3%83%BC%E3%83%88%E3%83%AD%E3%83%BC%E3%83%80%E3%83%BC/</guid>
      <description>最近Androidのrootを取るのにbootloaderのアンロックを行ったのでメモ。 BootLoaderとは 起動直後のコンピュータはハー</description>
    </item>
    
    <item>
      <title>SRM 608 DIV1 Easy - MysticAndCandies (復習×○)</title>
      <link>https://chaingng.github.io/post/srm-608-div1-easy---mysticandcandies-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sat, 08 Feb 2014 09:23:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-608-div1-easy---mysticandcandies-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12997&amp;amp;rd=15841 複数の箱それぞれに対しlowとhighの値が割り振られ、lowからhighの間の数のキャンディーが入っている。 また、合計のキャンディー</description>
    </item>
    
    <item>
      <title>SRM 607 DIV1 Easy - PalindromicSubstringsDiv1 xx</title>
      <link>https://chaingng.github.io/post/srm-607-div1-easy---palindromicsubstringsdiv1-xx/</link>
      <pubDate>Wed, 05 Feb 2014 22:34:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-607-div1-easy---palindromicsubstringsdiv1-xx/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12964&amp;amp;rd=15840 ある文字列が与えられる。 文字列はアルファベットと、？からなり、？には任意の文字を入れることができる。 ？に任意の文字が入れられたとき、 そ</description>
    </item>
    
    <item>
      <title>SRM 599 DIV1 Easy - BigFatInteger (復習○)</title>
      <link>https://chaingng.github.io/post/srm-599-div1-easy---bigfatinteger-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 02 Feb 2014 11:04:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-599-div1-easy---bigfatinteger-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12867&amp;amp;rd=15711 ・最初は１から始まり、Ａ＾Ｂとなる数にしたい。 ・操作方法は、素数をかけるか、現在の数の約数をかけるかの２通り。 このとき、最小の操作回数</description>
    </item>
    
    <item>
      <title>SRM 604 DIV1 Easy - PowerOfThree (復習××)</title>
      <link>https://chaingng.github.io/post/srm-604-div1-easy---powerofthree-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 02 Feb 2014 10:03:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-604-div1-easy---powerofthree-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12917&amp;amp;rd=15837 ロボットが座標（０，０）からスタートし、４方向に移動する。 ステップ０からスタートし、各ステップ３＾Ｋだけ指定した方向に移動する。 移動し</description>
    </item>
    
    <item>
      <title>BeautifulSoupの第一歩</title>
      <link>https://chaingng.github.io/post/beautifulsoup%E3%81%AE%E7%AC%AC%E4%B8%80%E6%AD%A9/</link>
      <pubDate>Fri, 31 Jan 2014 23:22:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/beautifulsoup%E3%81%AE%E7%AC%AC%E4%B8%80%E6%AD%A9/</guid>
      <description>クローラーで取ってきたHTMLを解析するのにBeautifulSoupが使いやすそうだったので使ってみました。以下は簡単な使い方のメモ。 バー</description>
    </item>
    
    <item>
      <title>SRM 606 DIV1 Easy - EllysNumberGuessing （復習○）</title>
      <link>https://chaingng.github.io/post/srm-606-div1-easy---ellysnumberguessing-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Thu, 30 Jan 2014 19:19:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-606-div1-easy---ellysnumberguessing-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12975&amp;amp;rd=15839 ・２人でゲームを行い、一人は１～１０＾９までの数を思い浮かべ、 もう一人が言った数との絶対値を答える。 ・このターンを何度か繰り返したとき</description>
    </item>
    
    <item>
      <title>Linuxのクロック</title>
      <link>https://chaingng.github.io/post/linux%E3%81%AE%E3%82%AF%E3%83%AD%E3%83%83%E3%82%AF/</link>
      <pubDate>Sun, 26 Jan 2014 19:37:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/linux%E3%81%AE%E3%82%AF%E3%83%AD%E3%83%83%E3%82%AF/</guid>
      <description>ハードウェアクロックとシステムクロック Linuxには「ハードウェアクロック」と「システムクロックの」２つが存在します。 「システムクロック」が</description>
    </item>
    
    <item>
      <title>Pythonでモジュールインポート時の注意</title>
      <link>https://chaingng.github.io/post/python%E3%81%A7%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%82%A4%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%88%E6%99%82%E3%81%AE%E6%B3%A8%E6%84%8F/</link>
      <pubDate>Sun, 26 Jan 2014 16:22:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/python%E3%81%A7%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%82%A4%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%88%E6%99%82%E3%81%AE%E6%B3%A8%E6%84%8F/</guid>
      <description>クローラーを作るのにPythonが使いやすかったので利用したのですが、 そのときにimportでひっかかってしまったのでメモ。 importの書</description>
    </item>
    
    <item>
      <title>SRM 596 DIV1 Easy - IncrementAndDoubling (復習○)</title>
      <link>https://chaingng.github.io/post/srm-596-div1-easy---incrementanddoubling-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 26 Jan 2014 00:08:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-596-div1-easy---incrementanddoubling-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12790&amp;amp;rd=15708 ・求める整数の集合が与えられる。 ・オペレーションはひとつの整数を１足すか全ての整数を２かけるかの２種類。 ・各整数は０からスタートし、オ</description>
    </item>
    
    <item>
      <title>SRM 594 DIV1 Easy - AstronomicalRecords (復習×○)</title>
      <link>https://chaingng.github.io/post/srm-594-div1-easy---astronomicalrecords-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Tue, 14 Jan 2014 23:38:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-594-div1-easy---astronomicalrecords-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12804&amp;amp;rd=15706 ・惑星がｎ個存在する。 ・惑星の相対サイズを測るシステムＡ，Ｂが存在する。 ・各システムは太陽からの距離が近い順からランダムな数を選び、そ</description>
    </item>
    
    <item>
      <title>SRM 602 DIV1 Easy - TypoCoderDiv1 (復習××)</title>
      <link>https://chaingng.github.io/post/srm-602-div1-easy---typocoderdiv1-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Mon, 13 Jan 2014 23:48:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-602-div1-easy---typocoderdiv1-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12924&amp;amp;rd=15820 ・現在のレートとコンテストごとの点数が与えられる。 ・そのコンテストに勝利した場合はその点数が足され、負けた場合は引かれる。ただし０ 未満</description>
    </item>
    
    <item>
      <title>俺のフレンチ</title>
      <link>https://chaingng.github.io/post/%E4%BF%BA%E3%81%AE%E3%83%95%E3%83%AC%E3%83%B3%E3%83%81/</link>
      <pubDate>Sat, 02 Nov 2013 10:48:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E4%BF%BA%E3%81%AE%E3%83%95%E3%83%AC%E3%83%B3%E3%83%81/</guid>
      <description>用事があって表参道に行ったところ、通りがかりに俺のフレンチがあったので行ってきました。 俺のフレンチの中でも一番大きい店舗らしく、すぐに入るこ</description>
    </item>
    
    <item>
      <title>SRM 517 DIV1 Easy - CompositeSmash （復習○）</title>
      <link>https://chaingng.github.io/post/srm-517-div1-easy---compositesmash-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 13 Oct 2013 10:58:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-517-div1-easy---compositesmash-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11535&amp;amp;rd=14542 正の整数Ｎとtargetが与えられる。 Ｎはスマッシュするとx*y=N（x,yは整数）となるｘとｙに分割することができる。 このとき、どう</description>
    </item>
    
    <item>
      <title>SRM 518 DIV1 Easy - LargestSubsequence （復習○）</title>
      <link>https://chaingng.github.io/post/srm-518-div1-easy---largestsubsequence-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 13 Oct 2013 10:23:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-518-div1-easy---largestsubsequence-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11471&amp;amp;rd=14543 ある文字列が与えられる。 その文字からいくつかの文字を削除したものがそのサブ文字列と定義される。 このとき、辞書順で最も降順となるサブ文字</description>
    </item>
    
    <item>
      <title>SRM 519 DIV1 Easy - BinaryCards (復習××)</title>
      <link>https://chaingng.github.io/post/srm-519-div1-easy---binarycards-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 13 Oct 2013 10:17:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-519-div1-easy---binarycards-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11552&amp;amp;rd=14544 正の整数ＡとＢが与えられる。 ＡからＢを得るには、２進数で表わされたＡから各ビットを返していく。 この操作を行ったとき、途中で現れる最大の</description>
    </item>
    
    <item>
      <title>SRM 520 DIV1 Easy - SRMCodingPhase （復習○）</title>
      <link>https://chaingng.github.io/post/srm-520-div1-easy---srmcodingphase-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 13 Oct 2013 08:45:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-520-div1-easy---srmcodingphase-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11381&amp;amp;rd=14545 SRMの３問の問題を７５分以内で解く。 各問題については、最大獲得ポイントと解くのにかかる時間が与えられる。 各３問については、解いたとき</description>
    </item>
    
    <item>
      <title>SRM 521 DIV1 Easy - MissingParentheses （復習○）</title>
      <link>https://chaingng.github.io/post/srm-521-div1-easy---missingparentheses-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 13 Oct 2013 08:27:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-521-div1-easy---missingparentheses-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=10943&amp;amp;rd=14546 カッコの並びが与えられる。 カッコがきちんと閉じた形になるために、追加で必要なカッコの数を求める。 解き方 左カッコが出てきたら＋１、右カッ</description>
    </item>
    
    <item>
      <title>SRM 522 DIV1 Easy - RowAndCoins （復習○）</title>
      <link>https://chaingng.github.io/post/srm-522-div1-easy---rowandcoins-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 13 Oct 2013 08:19:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-522-div1-easy---rowandcoins-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11566&amp;amp;rd=14547 AliceとBobの２人で行うゲーム。 一行のマスの並びが与えられて、各マスにはＡかＢのどちらかが書かれている。 ゲームはAliceから始</description>
    </item>
    
    <item>
      <title>SRM 523 DIV1 Easy - CountingSeries (復習××)</title>
      <link>https://chaingng.github.io/post/srm-523-div1-easy---countingseries-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 13 Oct 2013 07:55:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-523-div1-easy---countingseries-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=10957&amp;amp;rd=14548 １からupperBoundまでの数が与えられる。 また、a,b,c,dの正の整数が与えられる。 このとき、a+b*x または c*d^y（x,</description>
    </item>
    
    <item>
      <title>SRM 524 DIV1 Easy - MagicDiamonds (復習×○)</title>
      <link>https://chaingng.github.io/post/srm-524-div1-easy---magicdiamonds-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 13 Oct 2013 07:42:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-524-div1-easy---magicdiamonds-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11607&amp;amp;rd=14549 ｎ個のダイヤモンドを運びたい。 １度に最大ｎ個運ぶことができるが、ｎが素数だった場合消滅してしまう。 このとき、消滅せずに全てのダイヤを運</description>
    </item>
    
    <item>
      <title>SRM 525 DIV1 Easy - DropCoins （復習○）</title>
      <link>https://chaingng.github.io/post/srm-525-div1-easy---dropcoins-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sat, 12 Oct 2013 14:19:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-525-div1-easy---dropcoins-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11665&amp;amp;rd=14550 四角形のセルに複数コインがある。 １回の操作で上下左右に全てのコインを移動させることができ、四角形から外れたコインは落ちる。 コインの数Ｋ</description>
    </item>
    
    <item>
      <title>SRM 526 DIV1 Easy - DucksAlignment （復習○）</title>
      <link>https://chaingng.github.io/post/srm-526-div1-easy---ducksalignment-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sat, 12 Oct 2013 14:08:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-526-div1-easy---ducksalignment-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11667&amp;amp;rd=14551 四角形のマスにダチョウが複数存在する。 ダチョウを縦か横に一列に並べるとき、必要な最小移動数を求める。 解き方 縦に並べるときと横に並べると</description>
    </item>
    
    <item>
      <title>SRM 528 DIV1 Easy - Cut （復習○）</title>
      <link>https://chaingng.github.io/post/srm-528-div1-easy---cut-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 29 Sep 2013 18:43:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-528-div1-easy---cut-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11564&amp;amp;rd=14553 様々な長さのうなぎとカットできる数が与えられる。 カットして、できるだけ多く１０の長さのうなぎをつくる。 このとき、最大となる１０の長さの</description>
    </item>
    
    <item>
      <title>SRM 529 DIV1 Easy - KingSort (復習×○)</title>
      <link>https://chaingng.github.io/post/srm-529-div1-easy---kingsort-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 29 Sep 2013 18:29:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-529-div1-easy---kingsort-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11740&amp;amp;rd=14722 王様の名前が与えられ、順番に並べる。 名前はアルファベットの連続とＩ，ＩIの数字で与えられ、アルファベットの昇順、同じ場合はＩ，ＩIの小</description>
    </item>
    
    <item>
      <title>SRM 530 DIV1 Easy - GogoXCake （復習○）</title>
      <link>https://chaingng.github.io/post/srm-530-div1-easy---gogoxcake-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 29 Sep 2013 18:16:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-530-div1-easy---gogoxcake-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11274&amp;amp;rd=14723 ケーキをカットする問題。 カットされたあとのケーキの形と、カットするナイフが与えられる。 ナイフを当てるときは必ず、そのマスにもケーキがな</description>
    </item>
    
    <item>
      <title>SRM 531 DIV1 Easy - NoRepeatPlaylist (復習○)</title>
      <link>https://chaingng.github.io/post/srm-531-div1-easy---norepeatplaylist-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 29 Sep 2013 18:09:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-531-div1-easy---norepeatplaylist-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11774&amp;amp;rd=14724 プレイヤーにＮ曲の曲が入っており、Ｐ曲からなるプレイリストを作りたい。 Ｎ曲はそれぞれ少なくとも１回は再生しなければならない。 また、１度</description>
    </item>
    
    <item>
      <title>SRM 532 DIV1 Easy - DengklekMakingChains (復習××)</title>
      <link>https://chaingng.github.io/post/srm-532-div1-easy---dengklekmakingchains-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 29 Sep 2013 17:48:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-532-div1-easy---dengklekmakingchains-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11754&amp;amp;rd=14725 長さ３からなる鎖がある。 鎖はビーズか数字のパーツからなる。 複数の鎖が与えられ、鎖をつなげたときに連続した数字が美しさの値になる。 このと</description>
    </item>
    
    <item>
      <title>SRM 533 DIV1 Easy - CasketOfStar (復習×)</title>
      <link>https://chaingng.github.io/post/srm-533-div1-easy---casketofstar-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sat, 24 Aug 2013 07:46:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-533-div1-easy---casketofstar-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11781&amp;amp;rd=14726 数字の文字列が与えられる。 ひとつずつ文字を選び、その両端の値をかけたものがスコアになる。 選んだあとはその文字は消滅する。 最初と最後の値</description>
    </item>
    
    <item>
      <title>SRM 563 DIV1 Easy - FoxAndHandle (復習××)</title>
      <link>https://chaingng.github.io/post/srm-563-div1-easy---foxandhandle-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sat, 24 Aug 2013 07:35:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-563-div1-easy---foxandhandle-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12331&amp;amp;rd=15185 文字列が与えられて、その文字をシャッフルして元の文字にランダムに挿入する。 挿入後の文字列が与えられた時、元の文字列のうち辞書順に最小の</description>
    </item>
    
    <item>
      <title>SRM 578 DIV1 Easy - GooseInZooDivOne (復習×)</title>
      <link>https://chaingng.github.io/post/srm-578-div1-easy---gooseinzoodivone-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Wed, 21 Aug 2013 08:23:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-578-div1-easy---gooseinzoodivone-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12539&amp;amp;rd=15498 2次元のセルが与えられ、それぞれのセルは鳥がいるかいないかで表わされる。 鳥はガチョウとアヒルの２種類存在する。 その鳥がどちらかはわから</description>
    </item>
    
    <item>
      <title>SRM 565 DIV1 Easy - MonstersValley (復習××)</title>
      <link>https://chaingng.github.io/post/srm-565-div1-easy---monstersvalley-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Wed, 21 Aug 2013 07:50:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-565-div1-easy---monstersvalley-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12350&amp;amp;rd=15187 モンスターが複数いる谷を越える。 各モンスターには恐さとコインの値を持つ。 プレイヤーは各モンスターに対し、そのコインを払って仲間にするか</description>
    </item>
    
    <item>
      <title>SRM 571 DIV1 Easy - FoxAndMp3 (復習×○)</title>
      <link>https://chaingng.github.io/post/srm-571-div1-easy---foxandmp3-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Tue, 20 Aug 2013 08:21:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-571-div1-easy---foxandmp3-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12436&amp;amp;rd=15491 １～Ｎまでの数字が付けられたN.mp3ファイルを昇順に並べる。 Ｎが５０を超える場合は、最初の５０個の昇順に並べられたファイル数を返す。</description>
    </item>
    
    <item>
      <title>SRM 572 DIV1 Easy - NewArenaPassword （復習○）</title>
      <link>https://chaingng.github.io/post/srm-572-div1-easy---newarenapassword-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Tue, 20 Aug 2013 08:09:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-572-div1-easy---newarenapassword-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12386&amp;amp;rd=15492 古いパスワードから新しいパスワードを作りたいが、できるだけ変更したくない。 また、パスワードの最初のＫ文字と最後のＫ文字は一致していない</description>
    </item>
    
    <item>
      <title>SRM 546 DIV1 Easy - KleofasTail （復習○）</title>
      <link>https://chaingng.github.io/post/srm-546-div1-easy---kleofastail-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 18 Aug 2013 20:12:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-546-div1-easy---kleofastail-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12049&amp;amp;rd=14738 整数が与えられる。 整数が偶数のときは２で割り、奇数であれば１を引くことができる。 整数の範囲とある数が与えられた時、 その整数の範囲内であ</description>
    </item>
    
    <item>
      <title>SRM 562 DIV1 Easy - PastingPaintingDivOne （復習○）</title>
      <link>https://chaingng.github.io/post/srm-562-div1-easy---pastingpaintingdivone-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 18 Aug 2013 18:57:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-562-div1-easy---pastingpaintingdivone-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12317&amp;amp;rd=15184 長方形の模様が与えられる。 模様はの各セルはＲ，Ｇ，Ｂのいずれかの色、もしくは．で表わされる透明のセルで 構成される。 最初は左上に重なるよ</description>
    </item>
    
    <item>
      <title>SRM 577 DIV1 -Level1</title>
      <link>https://chaingng.github.io/post/srm-577-div1--level1/</link>
      <pubDate>Sun, 18 Aug 2013 17:13:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-577-div1--level1/</guid>
      <description>問題 プログラミングコンテストを実施するにあたり、プレイヤーを部屋に割り当てる。 部屋は２０人単位。プレイヤーはレートをもっている。 部屋の割り当</description>
    </item>
    
    <item>
      <title>SRM 585 DIV1 Easy - TrafficCongestion (復習×○)</title>
      <link>https://chaingng.github.io/post/srm-585-div1-easy---trafficcongestion-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 18 Aug 2013 16:44:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-585-div1-easy---trafficcongestion-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11361&amp;amp;rd=15697 ２分木の高さが与えられる。 車は一筆書きでそのセルを移動することができる。 ただし、一度車が通った道は行くことができない。 このとき、すべて</description>
    </item>
    
    <item>
      <title>SRM 564 DIV1 Easy - KnightCircuit2 （復習○）</title>
      <link>https://chaingng.github.io/post/srm-564-div1-easy---knightcircuit2-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 18 Aug 2013 16:36:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-564-div1-easy---knightcircuit2-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=10968&amp;amp;rd=15186 ボードの長さと高さが与えられる。 このとき、ナイトが動けるマスを返す。 解き方 １辺の最大の長さは４５０００のため、Ｏ（１０＾８）となり全探</description>
    </item>
    
    <item>
      <title>SRM 584 DIV1 Easy - Egalitarianism （復習○）</title>
      <link>https://chaingng.github.io/post/srm-584-div1-easy---egalitarianism-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 18 Aug 2013 16:26:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-584-div1-easy---egalitarianism-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12613&amp;amp;rd=15696 友達のつながりの集合が与えられる。 それぞれの人はお金を所ゆすることができるが、 友達同士は、ｄ以下の差でなければいけない。 このとき、集合</description>
    </item>
    
    <item>
      <title>SRM 582 DIV1 Easy - SpaceWarDiv1 (復習×○)</title>
      <link>https://chaingng.github.io/post/srm-582-div1-easy---spacewardiv1-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 18 Aug 2013 16:15:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-582-div1-easy---spacewardiv1-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12604&amp;amp;rd=15502 魔法少女が敵を倒す。 それぞれの敵には強さとその強さの個体数、それぞれの魔法少女は強さを持つ。 魔法少女は自分よりも強さが敵を倒すことがで</description>
    </item>
    
    <item>
      <title>SRM 574 DIV1 Easy - TheNumberGame （復習x）</title>
      <link>https://chaingng.github.io/post/srm-574-div1-easy---thenumbergame-%E5%BE%A9%E7%BF%92x/</link>
      <pubDate>Sun, 18 Aug 2013 16:02:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-574-div1-easy---thenumbergame-%E5%BE%A9%E7%BF%92x/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12474&amp;amp;rd=15494 ２人のプレイヤーが交互に行うゲーム。 それぞれ正の整数が与えられる。 各ターンにて、プレイヤーはその数字を１０で割るか、逆にすることができ</description>
    </item>
    
    <item>
      <title>SRM 573 DIV1 Easy - TeamContest （復習○）</title>
      <link>https://chaingng.github.io/post/srm-573-div1-easy---teamcontest-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 18 Aug 2013 11:28:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-573-div1-easy---teamcontest-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12470&amp;amp;rd=15493 それぞれのプレイヤーの強さが与えられる。 ３人でチームを作り、チームの強さはそのうち最小と最大の強さを足したものになる。 自分のチームは最</description>
    </item>
    
    <item>
      <title>SRM 557 DIV1 Easy - MergersDivOne (復習×)</title>
      <link>https://chaingng.github.io/post/srm-557-div1-easy---mergersdivone-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 18 Aug 2013 10:53:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-557-div1-easy---mergersdivone-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12195 山登りをし、スタートの高さとゴールの高さ、ステップ数が与えられる。 １ステップごとに、１段上がるか下がるかすることができる。 また、登山の</description>
    </item>
    
    <item>
      <title>SRM 536 DIV1 Easy - MergersDivOne （復習○）</title>
      <link>https://chaingng.github.io/post/srm-536-div1-easy---mergersdivone-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 18 Aug 2013 10:30:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-536-div1-easy---mergersdivone-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=11799&amp;amp;rd=14728 複数の会社が与えられる。 そのうち任意の数を選択し、その価値の和／選択した数が合併した後の価値になる。 すべての会社を合併した時、最大とな</description>
    </item>
    
    <item>
      <title>SRM 554 DIV1 Easy - TheBrickTowerEasyDivOne （復習○）</title>
      <link>https://chaingng.github.io/post/srm-554-div1-easy---thebricktowereasydivone-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 18 Aug 2013 10:15:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-554-div1-easy---thebricktowereasydivone-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12159&amp;amp;rd=15176 ２つの色のレンガと、レンガの個数がそれぞれ与えられる。 レンガは違う色を交互にだけ積み重ねることができる。 このとき、とりうる高さの場合の</description>
    </item>
    
    <item>
      <title>SRM 547 DIV1 Easy - Pillars (復習×○)</title>
      <link>https://chaingng.github.io/post/srm-547-div1-easy---pillars-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 18 Aug 2013 10:00:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-547-div1-easy---pillars-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12055&amp;amp;rd=14739 柱が２つ与えられる。柱の間の距離はｗ。 ２つの柱の最大の長さｘ、ｙが与えられ、１～ｘ、１～ｙの間で好きに決めることができる。 最後に、柱の</description>
    </item>
    
    <item>
      <title>SRM 569 DIV1 Easy - TheDevice （復習○）</title>
      <link>https://chaingng.github.io/post/srm-569-div1-easy---thedevice-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 18 Aug 2013 09:41:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-569-div1-easy---thedevice-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12388&amp;amp;rd=15489 プレートの問題の応用。 各ビットごとに、ＸＯＲ，ＡＮＤ，ＯＲいずれかの動作をするデバイスがある。 またビットの和で構成されているプレートが</description>
    </item>
    
    <item>
      <title>SRM 570 DIV1 Easy - RobotHerb (復習××)</title>
      <link>https://chaingng.github.io/post/srm-570-div1-easy---robotherb-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 18 Aug 2013 09:35:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-570-div1-easy---robotherb-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12427&amp;amp;rd=15490 ロボットが与えられた数の配列の通りに動作する。 最初は任意の方向を向いており、配列の最初の数だけまっすぐ移動する。 その後、移動した分だけ</description>
    </item>
    
    <item>
      <title>SRM 575 DIV1 Easy - TheNumberGameDivOne (復習○)</title>
      <link>https://chaingng.github.io/post/srm-575-div1-easy---thenumbergamedivone-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 18 Aug 2013 08:58:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-575-div1-easy---thenumbergamedivone-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12496&amp;amp;rd=15495 ２人でのゲーム。 ある数が与えられ、プレイヤーは１とその数自身以外の約数をそこから引くことができる。 約数を引いたら、次のプレイヤーに交替</description>
    </item>
    
    <item>
      <title>SRM 583 DIV1 Easy - TravelOnMars （復習x）</title>
      <link>https://chaingng.github.io/post/srm-583-div1-easy---travelonmars-%E5%BE%A9%E7%BF%92x/</link>
      <pubDate>Sun, 18 Aug 2013 08:34:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-583-div1-easy---travelonmars-%E5%BE%A9%E7%BF%92x/</guid>
      <description>問題 都市が円状につながっている。 各都市には、そこから１ターンでいける都市数が保存されている。 始点と終点が与えられた時、移動するための最小ター</description>
    </item>
    
    <item>
      <title>SRM 586 DIV1 Easy - PiecewiseLinearFunction （復習○）</title>
      <link>https://chaingng.github.io/post/srm-586-div1-easy---piecewiselinearfunction-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sun, 18 Aug 2013 08:24:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-586-div1-easy---piecewiselinearfunction-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12691&amp;amp;rd=15698 座標上の点が複数与えられて、それぞれ線で結ぶ。 このとき、一番多く存在する線上のｙの値について、最大値を求める。 解き方 すべてのｙに対して</description>
    </item>
    
    <item>
      <title>SRM 556 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm-556-div2--level2/</link>
      <pubDate>Tue, 16 Jul 2013 21:41:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-556-div2--level2/</guid>
      <description>問題 ①複数の地点が与えられて、それぞれの地点に値を持つ。 ②また地点によっては道路で結ばれていて、 道路として結ばれている２次元配列が与えられる</description>
    </item>
    
    <item>
      <title>SRM 554 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm-554-div2--level2/</link>
      <pubDate>Mon, 15 Jul 2013 09:24:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-554-div2--level2/</guid>
      <description>問題 ①高さを示す配列が与えられる。 ②隣り合う高さについては、倒れた時もぶつからないよう２つのうち最大の高さ分の距離をとらなければならない。 ③</description>
    </item>
    
    <item>
      <title>SRM580 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm580-div2--level2/</link>
      <pubDate>Sun, 14 Jul 2013 10:44:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm580-div2--level2/</guid>
      <description>問題 ①複数のうなぎが川を流れている。 ②各うなぎは毎秒１の速さで進む。 ③各うなぎに対し、最初に到達する時間ｔと、うなぎの長さｌが与えられる。 ④</description>
    </item>
    
    <item>
      <title>SRM576 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm576-div2--level2/</link>
      <pubDate>Sun, 14 Jul 2013 09:09:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm576-div2--level2/</guid>
      <description>問題 ①２次元の配列が与えられる。 ②配列には”Ｘ”で表わされる床が存在する。一番下は全て床になっている。 ③また、コインのある座標が与えられる。</description>
    </item>
    
    <item>
      <title>SRM574 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm574-div2--level2/</link>
      <pubDate>Sat, 13 Jul 2013 21:10:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm574-div2--level2/</guid>
      <description>問題 ①数字が二つ与えられる。 ②プレイヤーは一つ目の数字を１０で割る、もしくは逆にすることができる。 ③上記の操作によって、２つ目の数字にすると</description>
    </item>
    
    <item>
      <title>SRM541 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm541-div2--level2/</link>
      <pubDate>Sat, 13 Jul 2013 13:50:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm541-div2--level2/</guid>
      <description>問題 ①複数の座標が与えられる。 それぞれの座標にたいして、ＮＷＳＥの方向が与えられる。 ②それぞれの座標には蟻がいて指定された方向に進む。 ③蟻は</description>
    </item>
    
    <item>
      <title>SRM550 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm550-div2--level2/</link>
      <pubDate>Sat, 13 Jul 2013 10:04:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm550-div2--level2/</guid>
      <description>問題 ①大きさがわからない、２次元のセルを飛行機が移動する。 ②また、移動セル数を示す数字の配列が与えられる。 ③最初は右を向いており、最初の移動</description>
    </item>
    
    <item>
      <title>SRM547 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm547-div2--level2/</link>
      <pubDate>Sat, 13 Jul 2013 09:08:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm547-div2--level2/</guid>
      <description>問題 ①それぞれの棒について、最大の高さを表わす配列が与えられる。 ②それぞれの棒について、１～最大の高さまで任意に設定することができる。 ③また</description>
    </item>
    
    <item>
      <title>SRM551 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm551-div2--level2/</link>
      <pubDate>Sat, 13 Jul 2013 09:00:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm551-div2--level2/</guid>
      <description>問題 ①大文字のアルファベットの配列が与えられる。 ②任意の要素をスワップことができるが、スワップ回数の上限も与えられる。 ③このとき、同じアルフ</description>
    </item>
    
    <item>
      <title>SRM 543 DIV1 Easy - EllysXors</title>
      <link>https://chaingng.github.io/post/srm-543-div1-easy---ellysxors/</link>
      <pubDate>Fri, 12 Jul 2013 08:36:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-543-div1-easy---ellysxors/</guid>
      <description>問題 ①整数ＬとＲが与えられる。 ②このとき、ＬからＲまでの間全ての数をＸＯＲした後の値を求める。 解き方 Ｌ，Ｒは４＊１０＾９のため単純なシミュレ</description>
    </item>
    
    <item>
      <title>SRM534 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm534-div2--level2/</link>
      <pubDate>Wed, 10 Jul 2013 09:52:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm534-div2--level2/</guid>
      <description>問題 ①１次元の列が与えられ、ランダムな数の石がおかれている。 ②この石は右に１マスもしくは３マス動かすことができる。 ３マス動かす時はその間の石</description>
    </item>
    
    <item>
      <title>SRM533 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm533-div2--level2/</link>
      <pubDate>Wed, 10 Jul 2013 09:33:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm533-div2--level2/</guid>
      <description>問題 ①数字の配列が与えられ、それぞれの配列は重さを表わす。 ②最初と最後以外の要素を任意で選ぶことができ、選んだ要素の前と後の重さの積がスコア</description>
    </item>
    
    <item>
      <title>SRM539 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm539-div2--level2/</link>
      <pubDate>Tue, 09 Jul 2013 08:28:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm539-div2--level2/</guid>
      <description>問題 ①数字の配列が２つ与えられる。 それぞれの番号は、岩が入るＢＯＸの最小の数と最大の数を表わす。 ②あなたは岩を無数に持っており、選んだＢＯＸ</description>
    </item>
    
    <item>
      <title>SRM537 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm537-div2--level2/</link>
      <pubDate>Tue, 09 Jul 2013 08:14:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm537-div2--level2/</guid>
      <description>問題 ①数字のペアＡ，Ｂが与えられる。 このとき、０以上のｐ、ｑに対し、Ａ＊ｐ＋Ｂ＊ｑで数が生成できる。 ②また、新たな数字Ｘが与えられる。 このと</description>
    </item>
    
    <item>
      <title>SRM546 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm546-div2--level2/</link>
      <pubDate>Thu, 04 Jul 2013 22:57:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm546-div2--level2/</guid>
      <description>問題 ①座標上にある２つの長方形の左下と右上の座標が与えられる。 ②２つの長方形の重なりが四角形の時はrectangle、線で接している場合はs</description>
    </item>
    
    <item>
      <title>SRM563 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm563-div2--level2/</link>
      <pubDate>Wed, 03 Jul 2013 23:29:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm563-div2--level2/</guid>
      <description>＜問題＞ ①２次元のフィールドが与えられる。 ②フィールドにはランダムな数の障害物と、２つのコインが置かれている。 ③プレイヤーは上下左右の操作を</description>
    </item>
    
    <item>
      <title>SRM535 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm535-div2--level2/</link>
      <pubDate>Wed, 03 Jul 2013 23:11:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm535-div2--level2/</guid>
      <description>＜問題＞ ①整数ＧとＬが与えられる。 ②最大公約数がＧ，かつ最小公倍数がＬである２つの数字の場合の数を返す。 存在しない場合はー１を返す。 ＜解き方</description>
    </item>
    
    <item>
      <title>SRM536 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm536-div2--level2/</link>
      <pubDate>Wed, 03 Jul 2013 22:54:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm536-div2--level2/</guid>
      <description>&amp;lt;問題&amp;gt; ①１～９個の面を持つサイコロがあり、決められた数だけ存在する。 ②どのサイコロを与えられたかはわからない。同じ面を持つサイ</description>
    </item>
    
    <item>
      <title>怒らないこと</title>
      <link>https://chaingng.github.io/post/%E6%80%92%E3%82%89%E3%81%AA%E3%81%84%E3%81%93%E3%81%A8/</link>
      <pubDate>Mon, 01 Jul 2013 20:13:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E6%80%92%E3%82%89%E3%81%AA%E3%81%84%E3%81%93%E3%81%A8/</guid>
      <description>日々暮らしていると時々えっ！となるようなことがありますが、 そういうときでも怒らないことって大事だと思います。 怒ることで自分の感情はすっきりす</description>
    </item>
    
    <item>
      <title>SRM565 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm565-div2--level2/</link>
      <pubDate>Sun, 30 Jun 2013 00:05:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm565-div2--level2/</guid>
      <description>＜問題＞ ①モンスターの集合が与えられ、各モンスターは怖さの値とコインの値を持つ。 ②プレイヤーは最初から順番にモンスターに遭遇する。 ③このとき</description>
    </item>
    
    <item>
      <title>SRM564 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm564-div2--level2/</link>
      <pubDate>Sat, 29 Jun 2013 23:17:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm564-div2--level2/</guid>
      <description>＜問題＞ ①赤のボールの数、緑のボールの数、青のボールの数と１つの整数が与えられる。 ②システムは赤のボールがあれば1個壊し、次に緑のボールがあ</description>
    </item>
    
    <item>
      <title>SRM566 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm566-div2--level2/</link>
      <pubDate>Sat, 29 Jun 2013 12:26:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm566-div2--level2/</guid>
      <description>＜問題＞ ①青が好きなペンギンと、赤が好きなペンギンが輪になって並ぶ。 ②同じ色が好きなペンギン同士は線を結んでペアを作る。 ③ただし、線は交差し</description>
    </item>
    
    <item>
      <title>SRM567 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm567-div2--level2/</link>
      <pubDate>Sat, 29 Jun 2013 10:46:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm567-div2--level2/</guid>
      <description>＜問題＞ ①２つの整数ＮとＭが与えられる。 ②１＜＝Ａ＜＝Ｎ、１＜＝Ｂ＜＝Ｍである、(sqrt(A)+sqrt(B))^2が整数であるＸが存在す</description>
    </item>
    
    <item>
      <title>パリの危なさ</title>
      <link>https://chaingng.github.io/post/%E3%83%91%E3%83%AA%E3%81%AE%E5%8D%B1%E3%81%AA%E3%81%95/</link>
      <pubDate>Thu, 27 Jun 2013 21:11:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E3%83%91%E3%83%AA%E3%81%AE%E5%8D%B1%E3%81%AA%E3%81%95/</guid>
      <description>いままで海外はアジア地域でタイ、カンボジア、インド、 ヨーロッパ地域では安全と言われるフィンランド、スイスからドイツ、治安が悪いと言われるスペ</description>
    </item>
    
    <item>
      <title>くどいほどの自問自答</title>
      <link>https://chaingng.github.io/post/%E3%81%8F%E3%81%A9%E3%81%84%E3%81%BB%E3%81%A9%E3%81%AE%E8%87%AA%E5%95%8F%E8%87%AA%E7%AD%94/</link>
      <pubDate>Wed, 26 Jun 2013 19:40:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E3%81%8F%E3%81%A9%E3%81%84%E3%81%BB%E3%81%A9%E3%81%AE%E8%87%AA%E5%95%8F%E8%87%AA%E7%AD%94/</guid>
      <description>前の記事でミスや想定外の事態に備えるためには 最悪の事態を想定する、と書きましたが、 ブルガリア戦に負けた際に本田圭佑選手が開いた記者会見にヒン</description>
    </item>
    
    <item>
      <title>海外出張２日目</title>
      <link>https://chaingng.github.io/post/%E6%B5%B7%E5%A4%96%E5%87%BA%E5%BC%B5%EF%BC%92%E6%97%A5%E7%9B%AE/</link>
      <pubDate>Thu, 20 Jun 2013 14:45:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E6%B5%B7%E5%A4%96%E5%87%BA%E5%BC%B5%EF%BC%92%E6%97%A5%E7%9B%AE/</guid>
      <description>今日から打ち合わせが始まりました。 今日の話はこうしておけばという反省から学ぶことをまとめます。 １つ学んだのは、念には念を入れておく、というこ</description>
    </item>
    
    <item>
      <title>海外出張１日目</title>
      <link>https://chaingng.github.io/post/%E6%B5%B7%E5%A4%96%E5%87%BA%E5%BC%B5%EF%BC%91%E6%97%A5%E7%9B%AE/</link>
      <pubDate>Thu, 20 Jun 2013 14:31:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E6%B5%B7%E5%A4%96%E5%87%BA%E5%BC%B5%EF%BC%91%E6%97%A5%E7%9B%AE/</guid>
      <description>研修では昨年一度海外へ行ったことはあるのですが、 純粋な業務では初めての海外出張です。 この時期のパリは夜が遅くても明るいので びっくりです。 １日</description>
    </item>
    
    <item>
      <title>SRM568 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm568-div2--level2/</link>
      <pubDate>Mon, 17 Jun 2013 09:06:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm568-div2--level2/</guid>
      <description>＜問題＞ ①Ｎ個の箱が与えられる。 ②それぞれの箱には、赤と緑と青のボールが複数個入っている。 ③このとき、それぞれの箱に１色のボールしか入らない</description>
    </item>
    
    <item>
      <title>１つの要素に着目した２つの配列のソート</title>
      <link>https://chaingng.github.io/post/%EF%BC%91%E3%81%A4%E3%81%AE%E8%A6%81%E7%B4%A0%E3%81%AB%E7%9D%80%E7%9B%AE%E3%81%97%E3%81%9F%EF%BC%92%E3%81%A4%E3%81%AE%E9%85%8D%E5%88%97%E3%81%AE%E3%82%BD%E3%83%BC%E3%83%88/</link>
      <pubDate>Sun, 16 Jun 2013 23:08:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%EF%BC%91%E3%81%A4%E3%81%AE%E8%A6%81%E7%B4%A0%E3%81%AB%E7%9D%80%E7%9B%AE%E3%81%97%E3%81%9F%EF%BC%92%E3%81%A4%E3%81%AE%E9%85%8D%E5%88%97%E3%81%AE%E3%82%BD%E3%83%BC%E3%83%88/</guid>
      <description>c++での方法ですが、 ２つの配列の各要素が関係しているとき、 ひとつの配列の要素順に両方をソートする方法です。 まずはペア型のコンテナを宣言。 vector</description>
    </item>
    
    <item>
      <title>SRM582 DIV2 -Level1,2</title>
      <link>https://chaingng.github.io/post/srm582-div2--level12/</link>
      <pubDate>Sat, 15 Jun 2013 11:47:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm582-div2--level12/</guid>
      <description>やっと緑コーダーになれました。 SYSTEMテストで２回連続で落ちていて、３度目の正直。 Challengeを今までまったくしておらず、ちゃんと</description>
    </item>
    
    <item>
      <title>SRM569 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm569-div2--level2/</link>
      <pubDate>Fri, 14 Jun 2013 09:11:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm569-div2--level2/</guid>
      <description>＜問題＞ ①０と１で構成される2次元配列が与えられる。 ②各ビット列の任意の２つに対し、それぞれＯＲかＸＯＲかＡＮＤ演算をするデバイスがビット列</description>
    </item>
    
    <item>
      <title>SRM570 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm570-div2--level2/</link>
      <pubDate>Wed, 12 Jun 2013 23:21:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm570-div2--level2/</guid>
      <description>&amp;lt;問題&amp;gt; ①数字の順列が与えられる。 ②各数字に対して、ロボットはその数字の分前に進む。進んだ後は右に９０度回転する。 ③最後の数字ま</description>
    </item>
    
    <item>
      <title>SRM544 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm544-div2--level2/</link>
      <pubDate>Wed, 12 Jun 2013 21:04:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm544-div2--level2/</guid>
      <description>＜問題＞ ①求めたい長さ(desiredL)と、求めたい長さ(desiredN)の本数と、実際の長さ(actualL)が与えられる。 ②実際の長</description>
    </item>
    
    <item>
      <title>SRM571 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm571-div2--level2/</link>
      <pubDate>Tue, 11 Jun 2013 22:47:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm571-div2--level2/</guid>
      <description>&amp;lt;問題&amp;gt; ①数字Ｎが与えられる。 ②１からＮまでの数字が付けられたｍｐ３ファイル、&#34;1.mp3&#34;,&#34;2.mp3&#34;...&#34;n.mp3&#34;</description>
    </item>
    
    <item>
      <title>SRM572 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm572-div2--level2/</link>
      <pubDate>Tue, 11 Jun 2013 22:23:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm572-div2--level2/</guid>
      <description>&amp;lt;問題&amp;gt; ①２つの文字列が与えられる。 ②それぞれの文字は、1回につきprevCostで前の文字に変えることができる。(aを除く) ③</description>
    </item>
    
    <item>
      <title>SRM573 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm573-div2--level2/</link>
      <pubDate>Mon, 10 Jun 2013 21:59:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm573-div2--level2/</guid>
      <description>&amp;lt;問題&amp;gt; ①数字の列が与えられる。数字の数はそれぞれの人のプログラミング能力の強さを表す。 ②そのうち３人一組でチームを作り、チーム</description>
    </item>
    
    <item>
      <title>SRM545 DIV2 -Level2</title>
      <link>https://chaingng.github.io/post/srm545-div2--level2/</link>
      <pubDate>Sun, 09 Jun 2013 10:54:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm545-div2--level2/</guid>
      <description>＜問題＞ ①文字数ｎが与えられる。 ②最小文字列minStrが与えられる。 ③文字列s中の順番i&amp;lt;jでs[i]&amp;gt;s[j]となるとき、i</description>
    </item>
    
    <item>
      <title>二分探索</title>
      <link>https://chaingng.github.io/post/%E4%BA%8C%E5%88%86%E6%8E%A2%E7%B4%A2/</link>
      <pubDate>Fri, 07 Jun 2013 09:20:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E4%BA%8C%E5%88%86%E6%8E%A2%E7%B4%A2/</guid>
      <description>二分探索について考えたいと思います。 ■適用できそうな問題 ・最長・最短というキーワードがあること。 ・Ｃ（ｘ)を満たすという条件があること。 ・全</description>
    </item>
    
    <item>
      <title>SRM548 DIV2 -500points</title>
      <link>https://chaingng.github.io/post/srm548-div2--500points/</link>
      <pubDate>Thu, 06 Jun 2013 00:01:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm548-div2--500points/</guid>
      <description>&amp;lt;問題&amp;gt; ①数字の順列が与えられる。 ②魔法の数字Ｌを使うことで、それぞれの数字からＬを引く、または足すことができる。 ③このとき、与</description>
    </item>
    
    <item>
      <title>SRM581 DIV2 -500points</title>
      <link>https://chaingng.github.io/post/srm581-div2--500points/</link>
      <pubDate>Tue, 04 Jun 2013 23:32:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm581-div2--500points/</guid>
      <description>＜問題＞ ①コンテナが入っているか（ｘ）、入っていないか（ー）を現す部屋の順列が与えられる。 （例）ーーｘｘｘ－－－ ②各監視カメラが監視している</description>
    </item>
    
    <item>
      <title>自分に原因があると考える</title>
      <link>https://chaingng.github.io/post/%E8%87%AA%E5%88%86%E3%81%AB%E5%8E%9F%E5%9B%A0%E3%81%8C%E3%81%82%E3%82%8B%E3%81%A8%E8%80%83%E3%81%88%E3%82%8B/</link>
      <pubDate>Mon, 03 Jun 2013 21:20:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E8%87%AA%E5%88%86%E3%81%AB%E5%8E%9F%E5%9B%A0%E3%81%8C%E3%81%82%E3%82%8B%E3%81%A8%E8%80%83%E3%81%88%E3%82%8B/</guid>
      <description>以前本でも読んだことがあった気がするのですが、 ある程度歳を重ねると、年齢の下の人が相対的に多くなることと、 合わせて色々な経験も重ねていること</description>
    </item>
    
    <item>
      <title>SRM575 DIV2 -500points</title>
      <link>https://chaingng.github.io/post/srm575-div2--500points/</link>
      <pubDate>Sun, 19 May 2013 23:43:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm575-div2--500points/</guid>
      <description>＜問題＞ ①ある正の整数が与えられる。 例）１５ ②整数は１かその数自身を除いた約数で除算ができる。 例）１５－３＝１２ ③ＪｏｈｎとＢｒｕｓの２人で</description>
    </item>
    
    <item>
      <title>SRM579 DIV2 -550points</title>
      <link>https://chaingng.github.io/post/srm579-div2--550points/</link>
      <pubDate>Sun, 19 May 2013 23:25:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm579-div2--550points/</guid>
      <description>＜問題＞ ①複数の単語が与えられる。 ②ディスプレイ・入力画面、ＵＮＤＯ領域の３つが与えられる。 ③キー入力は入力画面に現れ、ＥＮＴＥＲボタンを１</description>
    </item>
    
    <item>
      <title>SRM576 DIV2 -250points</title>
      <link>https://chaingng.github.io/post/srm576-div2--250points/</link>
      <pubDate>Wed, 15 May 2013 23:55:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm576-div2--250points/</guid>
      <description>＜問題＞ ①蛇口の数と、蛇口ごとにそこから出る水滴の数が与えられる。 例）３，４，１，１，５，６ ②スポンジの長さＬが与えられる。 例）Ｌ＝３ ③それ</description>
    </item>
    
    <item>
      <title>Topcoder 解いた問題のまとめ</title>
      <link>https://chaingng.github.io/post/topcoder-%E8%A7%A3%E3%81%84%E3%81%9F%E5%95%8F%E9%A1%8C%E3%81%AE%E3%81%BE%E3%81%A8%E3%82%81/</link>
      <pubDate>Wed, 15 May 2013 19:57:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/topcoder-%E8%A7%A3%E3%81%84%E3%81%9F%E5%95%8F%E9%A1%8C%E3%81%AE%E3%81%BE%E3%81%A8%E3%82%81/</guid>
      <description>Div2
SRM574 250points&amp;nbsp;500points
SRM575 250points&amp;nbsp;500points
SRM576 250points&amp;nbsp;500points
SRM577 250points 500points
SRM578 250points&amp;nbsp;500points
SRM579 250points&amp;nbsp;550points
 </description>
    </item>
    
    <item>
      <title>SRM577 DIV2 -500points</title>
      <link>https://chaingng.github.io/post/srm577-div2--500points/</link>
      <pubDate>Wed, 15 May 2013 19:53:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm577-div2--500points/</guid>
      <description>＜問題＞ ①Ｎ個の数字が与えられる。 例）42 911 666 17 13 1 1155 1094 815 5 1000 540 ②一番最初の数字が自分の値。 ③大きい数字の順から２０個取り出され、Ｒ個の部屋</description>
    </item>
    
    <item>
      <title>SRM578 DIV2 -500points</title>
      <link>https://chaingng.github.io/post/srm578-div2--500points/</link>
      <pubDate>Mon, 13 May 2013 22:55:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm578-div2--500points/</guid>
      <description>＜問題＞ ①四角形のフィールドとマンハッタン距離が与えられる。 各セルに鳥が入れば「v」、いなければ「.」で表わされる。 ②鳥はガチョウかアヒルだ</description>
    </item>
    
    <item>
      <title>SRM578 DIV2 -250points</title>
      <link>https://chaingng.github.io/post/srm578-div2--250points/</link>
      <pubDate>Mon, 13 May 2013 22:10:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm578-div2--250points/</guid>
      <description>問題 ①鹿の数と、落ちている角の数が与えられる。 例） 鹿３匹、角２本 ②鹿は角が０～２本である。 ③このとき、角が２本ある鹿の数の最小値と最大値を求</description>
    </item>
    
    <item>
      <title>一瞬一瞬を楽しむ</title>
      <link>https://chaingng.github.io/post/%E4%B8%80%E7%9E%AC%E4%B8%80%E7%9E%AC%E3%82%92%E6%A5%BD%E3%81%97%E3%82%80/</link>
      <pubDate>Sat, 27 Apr 2013 23:54:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E4%B8%80%E7%9E%AC%E4%B8%80%E7%9E%AC%E3%82%92%E6%A5%BD%E3%81%97%E3%82%80/</guid>
      <description>今日は家さがしでいろいろな不動産屋をまわって 内見したりしてきました。 相手と要望が違うので簡単に決まらなかったり いろいろ考えるのも頭を使って疲</description>
    </item>
    
    <item>
      <title>電子書籍の活用</title>
      <link>https://chaingng.github.io/post/%E9%9B%BB%E5%AD%90%E6%9B%B8%E7%B1%8D%E3%81%AE%E6%B4%BB%E7%94%A8/</link>
      <pubDate>Thu, 25 Apr 2013 23:30:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E9%9B%BB%E5%AD%90%E6%9B%B8%E7%B1%8D%E3%81%AE%E6%B4%BB%E7%94%A8/</guid>
      <description>WEB+DBとSoftware Designの総集編がPDFでまとまっていると聞いて、 欲しくなってしまいました。 WEB+DB PRESS 総集編 [Vol.1～60]</description>
    </item>
    
    <item>
      <title>違うことを細切れに</title>
      <link>https://chaingng.github.io/post/%E9%81%95%E3%81%86%E3%81%93%E3%81%A8%E3%82%92%E7%B4%B0%E5%88%87%E3%82%8C%E3%81%AB/</link>
      <pubDate>Wed, 24 Apr 2013 23:22:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E9%81%95%E3%81%86%E3%81%93%E3%81%A8%E3%82%92%E7%B4%B0%E5%88%87%E3%82%8C%E3%81%AB/</guid>
      <description>仕事でずっと同じことを続けてやっていたのですが、 途中で集中力が途切れるのを感じました。 こういうときは、違う仕事を細切れにやった方がいいと聞い</description>
    </item>
    
    <item>
      <title>情報収集のコツ</title>
      <link>https://chaingng.github.io/post/%E6%83%85%E5%A0%B1%E5%8F%8E%E9%9B%86%E3%81%AE%E3%82%B3%E3%83%84/</link>
      <pubDate>Tue, 23 Apr 2013 21:39:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E6%83%85%E5%A0%B1%E5%8F%8E%E9%9B%86%E3%81%AE%E3%82%B3%E3%83%84/</guid>
      <description>仕事上いろいろなセミナーの講演資料や、仕様書を読む機会が多いのですが いつも漫然と流し読みしてしまいがちです。 そこで情報収集をうまく自分のもの</description>
    </item>
    
    <item>
      <title>「challenge」には「change」が含まれる</title>
      <link>https://chaingng.github.io/post/challenge%E3%81%AB%E3%81%AFchange%E3%81%8C%E5%90%AB%E3%81%BE%E3%82%8C%E3%82%8B/</link>
      <pubDate>Mon, 22 Apr 2013 22:33:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/challenge%E3%81%AB%E3%81%AFchange%E3%81%8C%E5%90%AB%E3%81%BE%E3%82%8C%E3%82%8B/</guid>
      <description>今日は仕事の中で いままでリーダーがやっていた仕事をやってみる？という機会がありました。 できあがったものはもちろん完璧なものではなく、修正が必</description>
    </item>
    
    <item>
      <title>hulu</title>
      <link>https://chaingng.github.io/post/hulu/</link>
      <pubDate>Sun, 21 Apr 2013 20:21:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/hulu/</guid>
      <description>映画での英語の勉強ですが、 ＴＳＵＴＡＹＡに毎回借りに行くのも手間がかかるので、 huluというＶＯＤサイトを試してみることに。 日本語版はライン</description>
    </item>
    
    <item>
      <title>英語の学習方法</title>
      <link>https://chaingng.github.io/post/%E8%8B%B1%E8%AA%9E%E3%81%AE%E5%AD%A6%E7%BF%92%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sat, 20 Apr 2013 21:01:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E8%8B%B1%E8%AA%9E%E3%81%AE%E5%AD%A6%E7%BF%92%E6%96%B9%E6%B3%95/</guid>
      <description>英語の学習方法について自分の経験からまとめてみます。 最初はＴＯＥＩＣで９９０点を目指して頑張りました。 始めた当初はは５００点ほどでしたが、２</description>
    </item>
    
    <item>
      <title>High Sierra以降のmacはftpとtelnetが使えない。使うには、inetutilsをインストールする。</title>
      <link>https://chaingng.github.io/post/mac_ftp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/mac_ftp/</guid>
      <description>こちらの公式Q&amp;amp;Aにあるとおり、 High Sierra以降のmacではセキュリティを担保するために、ftpとtelnetがデフォルトで使えな</description>
    </item>
    
  </channel>
</rss>