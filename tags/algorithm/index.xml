<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithm on Hack Engineering</title>
    <link>https://chaingng.github.io/tags/algorithm/</link>
    <description>Recent content in Algorithm on Hack Engineering</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 29 Jan 2018 10:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://chaingng.github.io/tags/algorithm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>5Lと3Lのボトルで4Lの水を計る</title>
      <link>https://chaingng.github.io/post/prime_water/</link>
      <pubDate>Mon, 29 Jan 2018 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/prime_water/</guid>
      <description>水の移し方 ３Lの水をくんで、５Lのボトルに移す。 その後５Lのボトルをいっぱいにしても捨てなければいけないので、 常に３Lの水をくんで５Lの水に</description>
    </item>
    
    <item>
      <title>貪欲法の基礎</title>
      <link>https://chaingng.github.io/post/greedy/</link>
      <pubDate>Mon, 29 Jan 2018 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/greedy/</guid>
      <description>overview 各ステップにおいて、局所的な最適な決定を繰り返すソリューション 必ずしも最適解を導くわけではない bootcamp 1,5,10,25,50,100セントを使</description>
    </item>
    
    <item>
      <title>再帰の基礎</title>
      <link>https://chaingng.github.io/post/recursion/</link>
      <pubDate>Mon, 22 Jan 2018 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/recursion/</guid>
      <description>overview 部分的により小さいソリューションに分解できる問題 検索、列挙、分割統治、複雑な問題の分解は再帰を適用できる可能性がある 再帰関数はベースケース</description>
    </item>
    
    <item>
      <title>動的計画法の基礎</title>
      <link>https://chaingng.github.io/post/dynamic_programming/</link>
      <pubDate>Mon, 22 Jan 2018 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/dynamic_programming/</guid>
      <description>overview DPはいつでも解法の１つになりえる 特にサブ問題に関連する問題に適用できる 分割統治との違いは、同じサブ問題が何度も起こり得ること。そのため、</description>
    </item>
    
    <item>
      <title>SQLの基礎</title>
      <link>https://chaingng.github.io/post/sql/</link>
      <pubDate>Mon, 15 Jan 2018 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/sql/</guid>
      <description>SQLの実行順序 FROM WHERE GROUP BY HAVING SELECT ORDER_GY DBの作成 CREATE DATABASE shop; テーブルの作成 CREATE TABLE Shohin (shohin_id CHAR(4) NOT NULL, shohin_mei VARCHAR(100) NOT NULL; PRIMARY KEY (shohin_id) ); DEFAULT制約をつければデフォルト値を入れられ</description>
    </item>
    
    <item>
      <title>sorting overview</title>
      <link>https://chaingng.github.io/post/sorting/</link>
      <pubDate>Mon, 15 Jan 2018 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/sorting/</guid>
      <description>overview ソートは検索を早くするプリプロセスとして使われる 似ているアイテムを探すのにも使われる ヒープソート in-placeだが安定でない マージソート</description>
    </item>
    
    <item>
      <title>Hash Tables</title>
      <link>https://chaingng.github.io/post/hash/</link>
      <pubDate>Mon, 08 Jan 2018 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/hash/</guid>
      <description>overview 挿入、削除、参照がO(1) 衝突に対する実装が必要 linked-listを使うなど 衝突が発生すると、O(1+n/m)に増えていく（m:配列の</description>
    </item>
    
  </channel>
</rss>