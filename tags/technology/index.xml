<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Technology on takatomo&#39;s blog</title>
    <link>https://chaingng.github.io/tags/technology/</link>
    <description>Recent content in Technology on takatomo&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 08 Jan 2017 10:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://chaingng.github.io/tags/technology/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>vagrantの使い方</title>
      <link>https://chaingng.github.io/post/vagrant/</link>
      <pubDate>Sun, 08 Jan 2017 10:00:00 +0900</pubDate>
      
      <guid>https://chaingng.github.io/post/vagrant/</guid>
      <description>インストール 公式のDownloadページから、対応するOSのパッケージをダウンロードしてインストール VagrantFileの作成 vagrant initを</description>
    </item>
    
    <item>
      <title>Windowsのプロキシ</title>
      <link>https://chaingng.github.io/post/windows%E3%81%AE%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7/</link>
      <pubDate>Fri, 31 Oct 2014 22:24:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/windows%E3%81%AE%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7/</guid>
      <description>Windowsのプロキシには２種類存在する。 １つめはInternetExplorerのプロキシサーバー設定、もう一つは主にWindows Up</description>
    </item>
    
    <item>
      <title>makeの種類</title>
      <link>https://chaingng.github.io/post/make%E3%81%AE%E7%A8%AE%E9%A1%9E/</link>
      <pubDate>Fri, 31 Oct 2014 19:16:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/make%E3%81%AE%E7%A8%AE%E9%A1%9E/</guid>
      <description>makeにはいくつかの種類がある。 ・GNU make &amp;nbsp;gmakeとかいわれる。 &amp;nbsp;UNIX系で標準的に使われるもので、Window</description>
    </item>
    
    <item>
      <title>サービスの自動起動</title>
      <link>https://chaingng.github.io/post/%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%AE%E8%87%AA%E5%8B%95%E8%B5%B7%E5%8B%95/</link>
      <pubDate>Thu, 30 Oct 2014 12:13:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%AE%E8%87%AA%E5%8B%95%E8%B5%B7%E5%8B%95/</guid>
      <description>chkconfigを使う。 ランレベル２～５での自動起動 chkconfig httpd on 起動レベルを指定（ランレベル３，５で起動） chkconfig httpd on --level 35 自動起動しているサービス一覧</description>
    </item>
    
    <item>
      <title>linuxで複数のファイルを結合</title>
      <link>https://chaingng.github.io/post/linux%E3%81%A7%E8%A4%87%E6%95%B0%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E7%B5%90%E5%90%88/</link>
      <pubDate>Wed, 29 Oct 2014 18:28:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/linux%E3%81%A7%E8%A4%87%E6%95%B0%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E7%B5%90%E5%90%88/</guid>
      <description>catコマンドを使う。 下記のコマンドで指定したディレクトリ以下の全てのファイルを結合し、 newfilename.txtにその結果を保存できる</description>
    </item>
    
    <item>
      <title>RISCとCISC</title>
      <link>https://chaingng.github.io/post/risc%E3%81%A8cisc/</link>
      <pubDate>Fri, 17 Oct 2014 23:28:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/risc%E3%81%A8cisc/</guid>
      <description>プロセッサを支える技術から、RISCとCISCについて整理。 RISC（Reduced Instruction Set Computer）は固定長の単純な命令を実行する方式</description>
    </item>
    
    <item>
      <title>wgetをプロキシ経由で利用</title>
      <link>https://chaingng.github.io/post/wget%E3%82%92%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7%E7%B5%8C%E7%94%B1%E3%81%A7%E5%88%A9%E7%94%A8/</link>
      <pubDate>Thu, 16 Oct 2014 20:10:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/wget%E3%82%92%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7%E7%B5%8C%E7%94%B1%E3%81%A7%E5%88%A9%E7%94%A8/</guid>
      <description>/etc/wgetrcに、以下の設定を追加してあげればよい。 use_proxy = on proxy_user = user proxy_password = passwordhttps_proxy = http://proxy.yoyodyne.com:18023/http_proxy = http://proxy.yoyodyne.com:18023/ftp_proxy = http://proxy.yoyodyne.com:18023/ ちなみに、ユーザ名とパスワードの設定はwgetrc</description>
    </item>
    
    <item>
      <title>cygwin&#43;mintty&#43;apt-cygのインストール</title>
      <link>https://chaingng.github.io/post/cygwinminttyapt-cyg%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</link>
      <pubDate>Wed, 15 Oct 2014 22:08:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/cygwinminttyapt-cyg%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</guid>
      <description>windowsでlinuxコマンド等を使うためのcygwin+minttyのインストールメモ。 Cygwinのインストールまで Cygwinのイ</description>
    </item>
    
    <item>
      <title>androidのコードリーディング</title>
      <link>https://chaingng.github.io/post/android%E3%81%AE%E3%82%B3%E3%83%BC%E3%83%89%E3%83%AA%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0/</link>
      <pubDate>Tue, 14 Oct 2014 21:31:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/android%E3%81%AE%E3%82%B3%E3%83%BC%E3%83%89%E3%83%AA%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0/</guid>
      <description>業務でandroidのソースコードを読まなければならなかったときに学んだ、 効率的なソースコードの読み方のメモ。 動的な解析と静的な解析 ソースコ</description>
    </item>
    
    <item>
      <title>androidにおけるaction／Activity／レイアウト</title>
      <link>https://chaingng.github.io/post/android%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8Bactionactivity%E3%83%AC%E3%82%A4%E3%82%A2%E3%82%A6%E3%83%88/</link>
      <pubDate>Sun, 12 Oct 2014 21:45:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/android%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8Bactionactivity%E3%83%AC%E3%82%A4%E3%82%A2%E3%82%A6%E3%83%88/</guid>
      <description>ドットインストールで学んだ、androidアプリの基礎を整理。 http://dotinstall.com/lessons/basic_android AndroidManifest.xml app&amp;gt;src&amp;gt;mainの下にあるファイル。 activityタ</description>
    </item>
    
    <item>
      <title>短縮URLの仕組み</title>
      <link>https://chaingng.github.io/post/%E7%9F%AD%E7%B8%AEurl%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF/</link>
      <pubDate>Fri, 10 Oct 2014 22:21:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E7%9F%AD%E7%B8%AEurl%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF/</guid>
      <description>整理用にメモ。 短縮URLでアクセスできる仕組みは、要はリダイレクトを利用しているだけ。 サンプルとして、こちらのページで短縮URLを作成してみ</description>
    </item>
    
    <item>
      <title>地上デジタル放送を録画したメディアと再生方法</title>
      <link>https://chaingng.github.io/post/%E5%9C%B0%E4%B8%8A%E3%83%87%E3%82%B8%E3%82%BF%E3%83%AB%E6%94%BE%E9%80%81%E3%82%92%E9%8C%B2%E7%94%BB%E3%81%97%E3%81%9F%E3%83%A1%E3%83%87%E3%82%A3%E3%82%A2%E3%81%A8%E5%86%8D%E7%94%9F%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 09 Oct 2014 18:48:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E5%9C%B0%E4%B8%8A%E3%83%87%E3%82%B8%E3%82%BF%E3%83%AB%E6%94%BE%E9%80%81%E3%82%92%E9%8C%B2%E7%94%BB%E3%81%97%E3%81%9F%E3%83%A1%E3%83%87%E3%82%A3%E3%82%A2%E3%81%A8%E5%86%8D%E7%94%9F%E6%96%B9%E6%B3%95/</guid>
      <description>DVD-VR 地上デジタル放送を家庭のDVDレコーダーで録画した時は「VRモード」となる。 これはDVD-VR(Video Recording Format)と呼ばれるDVD</description>
    </item>
    
    <item>
      <title>android studioのプロキシ設定</title>
      <link>https://chaingng.github.io/post/android-studio%E3%81%AE%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Wed, 08 Oct 2014 20:44:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/android-studio%E3%81%AE%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7%E8%A8%AD%E5%AE%9A/</guid>
      <description>android studioのプロキシ設定のメモ。 HTTP Proxy File&amp;gt;Setting&amp;gt;HTTP Proxyから Manual Proxy Settingを選んで設定。 設定後、「Check Connection」ボタンで正</description>
    </item>
    
    <item>
      <title>GigabitEthernet規格の簡単なまとめ</title>
      <link>https://chaingng.github.io/post/gigabitethernet%E8%A6%8F%E6%A0%BC%E3%81%AE%E7%B0%A1%E5%8D%98%E3%81%AA%E3%81%BE%E3%81%A8%E3%82%81/</link>
      <pubDate>Tue, 07 Oct 2014 21:42:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/gigabitethernet%E8%A6%8F%E6%A0%BC%E3%81%AE%E7%B0%A1%E5%8D%98%E3%81%AA%E3%81%BE%E3%81%A8%E3%82%81/</guid>
      <description>GigabitEthernet規格の簡単なまとめ。 GigabitEthernet系の規格 GigabitEthernet系の規格はIEEE80</description>
    </item>
    
    <item>
      <title>android studioのインストール</title>
      <link>https://chaingng.github.io/post/android-studio%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</link>
      <pubDate>Mon, 06 Oct 2014 19:47:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/android-studio%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</guid>
      <description>android studioのインストールメモ。 まずはここから本体をダウンロード。 https://developer.android.com/sdk/installing/studio.html 後はこちらのページの内容に沿ってインストール。 https://developer.android.com/sdk/installing/index.html?pkg=studio まずはandroid s</description>
    </item>
    
    <item>
      <title>yumをローカルで使う場合のレポジトリ設定</title>
      <link>https://chaingng.github.io/post/yum%E3%82%92%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%A7%E4%BD%BF%E3%81%86%E5%A0%B4%E5%90%88%E3%81%AE%E3%83%AC%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Sun, 05 Oct 2014 22:10:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/yum%E3%82%92%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%A7%E4%BD%BF%E3%81%86%E5%A0%B4%E5%90%88%E3%81%AE%E3%83%AC%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E8%A8%AD%E5%AE%9A/</guid>
      <description>最初にCDをマウントして、ローカルにデータをコピー。 mkdir -p /mnt/cdrom mount /dev/cdrom /mnt/cdrom mkdir /opt/redhat cp -rp /mnt/cdrom/* /opt/redhat/ umount /mnt/cdrom 次に、必要なrpmパッケージをインストール。 rpm -ivh /opt/redhat/Packages/*.rpm レポジトリ</description>
    </item>
    
    <item>
      <title>JDKのインストール</title>
      <link>https://chaingng.github.io/post/jdk%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</link>
      <pubDate>Sat, 04 Oct 2014 20:51:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/jdk%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</guid>
      <description>こちらのページから対応するOSのJDKをインストール。 http://www.oracle.com/technetwork/java/javase/downloads/index-jsp-138363.html あとは、JAVAHOMEのパスを設定するだけ。</description>
    </item>
    
    <item>
      <title>gitのインストール</title>
      <link>https://chaingng.github.io/post/git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</link>
      <pubDate>Fri, 03 Oct 2014 21:20:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</guid>
      <description>gitのインストールメモ。 GIT EXTENTIONがCUIもGUIも同時にインストールできるのでスグレモノ。 以下のURLのDownloadからm</description>
    </item>
    
    <item>
      <title>yumをローカルで使用する場合のエイリアス</title>
      <link>https://chaingng.github.io/post/yum%E3%82%92%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%A7%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AE%E3%82%A8%E3%82%A4%E3%83%AA%E3%82%A2%E3%82%B9/</link>
      <pubDate>Thu, 02 Oct 2014 18:51:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/yum%E3%82%92%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%A7%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AE%E3%82%A8%E3%82%A4%E3%83%AA%E3%82%A2%E3%82%B9/</guid>
      <description>yumをインターネット経由ではなくローカルで使用したい場合のエイリアス設定。 /etc/bashrcもしくは~/.bashrcについて、以下を</description>
    </item>
    
    <item>
      <title>adbをWi-Fi経由で利用</title>
      <link>https://chaingng.github.io/post/adb%E3%82%92wi-fi%E7%B5%8C%E7%94%B1%E3%81%A7%E5%88%A9%E7%94%A8/</link>
      <pubDate>Wed, 01 Oct 2014 19:20:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/adb%E3%82%92wi-fi%E7%B5%8C%E7%94%B1%E3%81%A7%E5%88%A9%E7%94%A8/</guid>
      <description>端末が増えてくるとそれぞれusb接続してadbコマンドを打つと大変になった。 そこで、usbに接続しなくとも無線LAN経由にてadbを利用する</description>
    </item>
    
    <item>
      <title>LinuxでCPUやメモリ使用状況のログを取る方法</title>
      <link>https://chaingng.github.io/post/linux%E3%81%A7cpu%E3%82%84%E3%83%A1%E3%83%A2%E3%83%AA%E4%BD%BF%E7%94%A8%E7%8A%B6%E6%B3%81%E3%81%AE%E3%83%AD%E3%82%B0%E3%82%92%E5%8F%96%E3%82%8B%E6%96%B9%E6%B3%95/</link>
      <pubDate>Wed, 12 Mar 2014 19:55:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/linux%E3%81%A7cpu%E3%82%84%E3%83%A1%E3%83%A2%E3%83%AA%E4%BD%BF%E7%94%A8%E7%8A%B6%E6%B3%81%E3%81%AE%E3%83%AD%E3%82%B0%E3%82%92%E5%8F%96%E3%82%8B%E6%96%B9%E6%B3%95/</guid>
      <description>Linux(使っているのはRedhat Enterprise Linux 6.3)でCPU負荷とメモリ使用状況のログを取る必要があったので使い方をメモ。 ①CPU使用率とメモ</description>
    </item>
    
    <item>
      <title>ブートローダー</title>
      <link>https://chaingng.github.io/post/%E3%83%96%E3%83%BC%E3%83%88%E3%83%AD%E3%83%BC%E3%83%80%E3%83%BC/</link>
      <pubDate>Sun, 09 Feb 2014 18:34:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/%E3%83%96%E3%83%BC%E3%83%88%E3%83%AD%E3%83%BC%E3%83%80%E3%83%BC/</guid>
      <description>最近Androidのrootを取るのにbootloaderのアンロックを行ったのでメモ。 BootLoaderとは 起動直後のコンピュータはハー</description>
    </item>
    
    <item>
      <title>BeautifulSoupの第一歩</title>
      <link>https://chaingng.github.io/post/beautifulsoup%E3%81%AE%E7%AC%AC%E4%B8%80%E6%AD%A9/</link>
      <pubDate>Fri, 31 Jan 2014 23:22:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/beautifulsoup%E3%81%AE%E7%AC%AC%E4%B8%80%E6%AD%A9/</guid>
      <description>クローラーで取ってきたHTMLを解析するのにBeautifulSoupが使いやすそうだったので使ってみました。以下は簡単な使い方のメモ。 バー</description>
    </item>
    
    <item>
      <title>Linuxのクロック</title>
      <link>https://chaingng.github.io/post/linux%E3%81%AE%E3%82%AF%E3%83%AD%E3%83%83%E3%82%AF/</link>
      <pubDate>Sun, 26 Jan 2014 19:37:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/linux%E3%81%AE%E3%82%AF%E3%83%AD%E3%83%83%E3%82%AF/</guid>
      <description>ハードウェアクロックとシステムクロック Linuxには「ハードウェアクロック」と「システムクロックの」２つが存在します。 「システムクロック」が</description>
    </item>
    
    <item>
      <title>Pythonでモジュールインポート時の注意</title>
      <link>https://chaingng.github.io/post/python%E3%81%A7%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%82%A4%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%88%E6%99%82%E3%81%AE%E6%B3%A8%E6%84%8F/</link>
      <pubDate>Sun, 26 Jan 2014 16:22:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/python%E3%81%A7%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%82%A4%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%88%E6%99%82%E3%81%AE%E6%B3%A8%E6%84%8F/</guid>
      <description>クローラーを作るのにPythonが使いやすかったので利用したのですが、 そのときにimportでひっかかってしまったのでメモ。 importの書</description>
    </item>
    
  </channel>
</rss>