<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>彩色数 on takatomo&#39;s blog</title>
    <link>https://chaingng.github.io/tags/%E5%BD%A9%E8%89%B2%E6%95%B0/</link>
    <description>Recent content in 彩色数 on takatomo&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 22 Feb 2014 08:52:00 +0000</lastBuildDate>
    
	<atom:link href="https://chaingng.github.io/tags/%E5%BD%A9%E8%89%B2%E6%95%B0/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SRM 593 DIV1 Easy - HexagonalBoard (復習××)</title>
      <link>https://chaingng.github.io/post/srm-593-div1-easy---hexagonalboard-%E5%BE%A9%E7%BF%92/</link>
      <pubDate>Sat, 22 Feb 2014 08:52:00 +0000</pubDate>
      
      <guid>https://chaingng.github.io/post/srm-593-div1-easy---hexagonalboard-%E5%BE%A9%E7%BF%92/</guid>
      <description>問題 
http://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=12784&amp;amp;rd=15705
５角形のセルからなるボードがあり、任意の場所に石が置いてある。
石が隣り合うときは、かならず違う色にしなければいけない。
このとき、全ての石を塗るのに必要な最小の色の数を求める。
解き方 
シミュレーションしてみると、色の数は最大３色になることがわかる。
色が０色のときは石がないとき、１色のときは全て独立したセルであることから簡単に判定できるので、２色と３色のときの判定ができればよい。
今回は２色でぬろうとしたときに塗れないとき、つまり隣り合うセルが同じ色になってしまうときに３色を返すようにＤＦＳでコーディングする。
コード 
using namespace std;
#define all(c) (c).begin(),(c).end()
#define FORE(i,d,e) for(int i=d;i&amp;lt;e;i++)
#define FOR(i,s,e) for (int i = int(s); i != int(e); i++)
#define FORIT(i,c) for (typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define ISEQ(c) (c).begin(), (c).end()
int w,h;
vector&amp;lt;string&amp;gt; B;
int dr[]={-1,-1,0,0,1,1};
int dc[]={0,1,-1,1,-1,0};
class HexagonalBoard {
public:
int dfs(int r,int c,int v){
if(B[r][c]!=&#39;X&#39;)return 0;
int ret=1;</description>
    </item>
    
  </channel>
</rss>